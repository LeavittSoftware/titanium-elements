{
  "version": "experimental",
  "tags": [
    {
      "name": "api-service",
      "path": "./..\\api-service\\src\\api-service-element.ts",
      "description": "API service exposed in a custom element.",
      "attributes": [
        {
          "name": "baseProductionUri",
          "type": "string",
          "default": "\"https://api2.leavitt.com/\""
        },
        {
          "name": "baseDevUri",
          "type": "string",
          "default": "\"https://devapi2.leavitt.com/\""
        },
        {
          "name": "appName",
          "type": "string",
          "default": "\"General\""
        }
      ],
      "properties": [
        {
          "name": "baseProductionUri",
          "attribute": "baseProductionUri",
          "type": "string",
          "default": "\"https://api2.leavitt.com/\""
        },
        {
          "name": "baseDevUri",
          "attribute": "baseDevUri",
          "type": "string",
          "default": "\"https://devapi2.leavitt.com/\""
        },
        {
          "name": "appName",
          "attribute": "appName",
          "type": "string",
          "default": "\"General\""
        }
      ],
      "events": [
        {
          "name": "upload-file-progress"
        }
      ]
    },
    {
      "name": "leavitt-company-select",
      "path": "./..\\leavitt-elements\\src\\leavitt-company-select.ts",
      "description": "Single select input that searches Leavitt Group companies",
      "attributes": [
        {
          "name": "companies",
          "type": "Partial<Company>[]",
          "default": "[]"
        },
        {
          "name": "fixedMenuPosition",
          "description": "Sets the dropdown menu's position to fixed. This is useful when the select is inside of a stacking context e.g. inside of an mwc-dialog. Note, that --mdc-menu-min-width or --mdc-menu-max-width may have to be set to resize the menu to the width anchor.",
          "type": "boolean",
          "default": "true"
        },
        {
          "name": "disableAutoLoad",
          "description": "Disables automatic loading of companies on firstUpdated",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "odataParts",
          "description": "Odata parts for the Company API call",
          "type": "string[]",
          "default": "[\"orderby=Name\",\"select=Name,ShortName,MarkUrl,Id\"]"
        },
        {
          "name": "selected",
          "description": "The person object selected by the user.",
          "type": "Partial<Company> | null"
        },
        {
          "name": "validationMessage",
          "description": "Message to show in the error color when the element is invalid.",
          "type": "string"
        },
        {
          "name": "icon",
          "description": "Leading icon to display in select. See mwc-icon. Note: for proper list spacing, each list item must have graphic=\"icon\" or graphic=\"avatar\" to be set.",
          "type": "string",
          "default": "\"search\""
        },
        {
          "name": "label",
          "description": "Sets floating label value.",
          "type": "string",
          "default": "\"Company\""
        },
        {
          "name": "placeholder",
          "description": "Sets placeholder text value.",
          "type": "string",
          "default": "\"Search for a company\""
        },
        {
          "name": "disabled",
          "description": "Whether or not the input should be disabled.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "required",
          "description": "Displays error state if no image is empty and input is blurred.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "helper",
          "description": "Helper text to display below the select. Always displays by default.",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "validityTransform",
          "description": "Callback called before each validation check. See the mwc-textfield's validation section for more details.",
          "type": "() => { valid: boolean; valueMissing: boolean; } | { valid?: undefined; valueMissing?: undefined; }",
          "default": "\"() => {\\r\\n    if (this.required) {\\r\\n      return {\\r\\n        valid: !!this.selected,\\r\\n        valueMissing: !!this.selected,\\r\\n      };\\r\\n    }\\r\\n    return {};\\r\\n  }\""
        }
      ],
      "properties": [
        {
          "name": "companies",
          "attribute": "companies",
          "type": "Partial<Company>[]",
          "default": "[]"
        },
        {
          "name": "apiService",
          "description": "Required",
          "type": "ApiService"
        },
        {
          "name": "fixedMenuPosition",
          "attribute": "fixedMenuPosition",
          "description": "Sets the dropdown menu's position to fixed. This is useful when the select is inside of a stacking context e.g. inside of an mwc-dialog. Note, that --mdc-menu-min-width or --mdc-menu-max-width may have to be set to resize the menu to the width anchor.",
          "type": "boolean",
          "default": "true"
        },
        {
          "name": "disableAutoLoad",
          "attribute": "disableAutoLoad",
          "description": "Disables automatic loading of companies on firstUpdated",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "odataParts",
          "attribute": "odataParts",
          "description": "Odata parts for the Company API call",
          "type": "string[]",
          "default": "[\"orderby=Name\",\"select=Name,ShortName,MarkUrl,Id\"]"
        },
        {
          "name": "selected",
          "attribute": "selected",
          "description": "The person object selected by the user.",
          "type": "Partial<Company> | null"
        },
        {
          "name": "validationMessage",
          "attribute": "validationMessage",
          "description": "Message to show in the error color when the element is invalid.",
          "type": "string"
        },
        {
          "name": "icon",
          "attribute": "icon",
          "description": "Leading icon to display in select. See mwc-icon. Note: for proper list spacing, each list item must have graphic=\"icon\" or graphic=\"avatar\" to be set.",
          "type": "string",
          "default": "\"search\""
        },
        {
          "name": "label",
          "attribute": "label",
          "description": "Sets floating label value.",
          "type": "string",
          "default": "\"Company\""
        },
        {
          "name": "placeholder",
          "attribute": "placeholder",
          "description": "Sets placeholder text value.",
          "type": "string",
          "default": "\"Search for a company\""
        },
        {
          "name": "disabled",
          "attribute": "disabled",
          "description": "Whether or not the input should be disabled.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "required",
          "attribute": "required",
          "description": "Displays error state if no image is empty and input is blurred.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "helper",
          "attribute": "helper",
          "description": "Helper text to display below the select. Always displays by default.",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "validityTransform",
          "attribute": "validityTransform",
          "description": "Callback called before each validation check. See the mwc-textfield's validation section for more details.",
          "type": "() => { valid: boolean; valueMissing: boolean; } | { valid?: undefined; valueMissing?: undefined; }",
          "default": "\"() => {\\r\\n    if (this.required) {\\r\\n      return {\\r\\n        valid: !!this.selected,\\r\\n        valueMissing: !!this.selected,\\r\\n      };\\r\\n    }\\r\\n    return {};\\r\\n  }\""
        },
        {
          "name": "styles",
          "type": "CSSResult",
          "default": "\"css`\\r\\n    :host {\\r\\n      display: inline-block;\\r\\n      position: relative;\\r\\n      --mdc-menu-max-width: 550px;\\r\\n      --mdc-list-item-graphic-size: 40px;\\r\\n    }\\r\\n\\r\\n    mwc-textfield {\\r\\n      width: 100%;\\r\\n      background-color: var(--leavitt-company-select-background-color, #fff);\\r\\n    }\\r\\n\\r\\n    :host([shaped]) {\\r\\n      --mdc-shape-small: 28px;\\r\\n    }\\r\\n\\r\\n    :host([shallow]) {\\r\\n      --mdc-shape-small: 12px;\\r\\n    }\\r\\n\\r\\n    mwc-linear-progress {\\r\\n      margin: 0 12px;\\r\\n    }\\r\\n\\r\\n    img[selected] {\\r\\n      height: 24px;\\r\\n      width: 24px;\\r\\n      position: absolute;\\r\\n      top: 16px;\\r\\n      left: 12px;\\r\\n    }\\r\\n\\r\\n    [summary] {\\r\\n      padding: 0px 16px 4px 16px;\\r\\n      font-family: Roboto, Arial, sans-serif;\\r\\n      color: var(--app-light-text-color);\\r\\n      line-height: 18px;\\r\\n      font-size: 13px;\\r\\n    }\\r\\n  `\""
        },
        {
          "name": "formdata",
          "type": "FormDataEvent"
        },
        {
          "name": "mwc-notched-outline",
          "type": "NotchedOutline"
        },
        {
          "name": "mwc-ripple",
          "type": "Ripple"
        },
        {
          "name": "mwc-list-item",
          "type": "ListItem"
        },
        {
          "name": "mwc-list",
          "type": "List"
        },
        {
          "name": "mwc-menu-surface",
          "type": "MenuSurface"
        },
        {
          "name": "mwc-menu",
          "type": "MenuBase"
        },
        {
          "name": "mwc-icon",
          "type": "Icon"
        },
        {
          "name": "mwc-select",
          "type": "Select"
        },
        {
          "name": "mwc-textfield",
          "type": "TextField"
        },
        {
          "name": "mwc-linear-progress",
          "type": "LinearProgress"
        },
        {
          "name": "mwc-button",
          "type": "Button"
        },
        {
          "name": "mwc-icon-button",
          "type": "IconButton"
        },
        {
          "name": "mwc-dialog",
          "type": "Dialog"
        },
        {
          "name": "mwc-checkbox",
          "type": "Checkbox"
        },
        {
          "name": "mwc-formfield",
          "type": "Formfield"
        },
        {
          "name": "formData",
          "type": "FormData"
        },
        {
          "name": "floatingLabelFoundation",
          "type": "MDCFloatingLabelFoundation | undefined"
        },
        {
          "name": "lineRippleFoundation",
          "type": "MDCLineRippleFoundation | undefined"
        }
      ],
      "events": [
        {
          "name": "selected",
          "description": "Fired when selection is made or cleared"
        }
      ]
    },
    {
      "name": "leavitt-date-range",
      "path": "./..\\leavitt-elements\\src\\leavitt-date-range.ts",
      "attributes": [
        {
          "name": "range",
          "type": "DateRangeType",
          "default": "\"custom\""
        },
        {
          "name": "startDate",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "endDate",
          "type": "string",
          "default": "\"\""
        }
      ],
      "properties": [
        {
          "name": "range",
          "attribute": "range",
          "type": "DateRangeType",
          "default": "\"custom\""
        },
        {
          "name": "startDate",
          "attribute": "startDate",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "endDate",
          "attribute": "endDate",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "startDateField",
          "type": "DateField & { mdcFoundation: { setValid(): boolean; }; isUiValid: boolean; }"
        },
        {
          "name": "endDateField",
          "type": "DateField & { mdcFoundation: { setValid(): boolean; }; isUiValid: boolean; }"
        },
        {
          "name": "styles",
          "type": "CSSResult",
          "default": "\"css`\\r\\n    :host {\\r\\n      display: grid;\\r\\n      grid-gap: 16px;\\r\\n      grid-template-columns: 1fr 1fr 1fr;\\r\\n      grid-template-areas: 'select start end';\\r\\n    }\\r\\n\\r\\n    mwc-select {\\r\\n      grid-area: select;\\r\\n    }\\r\\n\\r\\n    mwc-datefield[start-date] {\\r\\n      grid-area: start;\\r\\n    }\\r\\n\\r\\n    mwc-datefield[end-date] {\\r\\n      grid-area: end;\\r\\n    }\\r\\n\\r\\n    @media (max-width: 1050px) {\\r\\n      :host {\\r\\n        grid-template-columns: 1fr 1fr;\\r\\n        grid-template-areas:\\r\\n          'select select'\\r\\n          'start end';\\r\\n      }\\r\\n    }\\r\\n\\r\\n    @media (max-width: 450px) {\\r\\n      :host {\\r\\n        grid-template-columns: 1fr;\\r\\n        grid-template-areas:\\r\\n          'select'\\r\\n          'start'\\r\\n          'end';\\r\\n      }\\r\\n    }\\r\\n  `\""
        }
      ]
    },
    {
      "name": "leavitt-person-company-select",
      "path": "./..\\leavitt-elements\\src\\leavitt-person-company-select.ts",
      "description": "Single select input that searches both Leavitt Group employees and companies",
      "attributes": [
        {
          "name": "selected",
          "description": "The person, company or text selected by the user.",
          "type": "SelectableEntity | null"
        },
        {
          "name": "validationMessage",
          "description": "Message to show in the error color when the element is invalid.",
          "type": "string"
        },
        {
          "name": "label",
          "description": "Sets floating label value.",
          "type": "string",
          "default": "\"Person or company\""
        },
        {
          "name": "placeholder",
          "description": "Sets placeholder text value.",
          "type": "string",
          "default": "\"Search a person or company\""
        },
        {
          "name": "disabled",
          "description": "Whether or not the input should be disabled.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "required",
          "description": "Displays error state if no image is empty and input is blurred.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "validityTransform",
          "description": "Callback called before each validation check. See the mwc-textfield's validation section for more details.",
          "type": "() => { valid: boolean; valueMissing: boolean; } | { valid?: undefined; valueMissing?: undefined; }",
          "default": "\"() => {\\r\\n    if (this.required) {\\r\\n      return {\\r\\n        valid: !!this.selected,\\r\\n        valueMissing: !!this.selected,\\r\\n      };\\r\\n    }\\r\\n    return {};\\r\\n  }\""
        }
      ],
      "properties": [
        {
          "name": "apiService",
          "description": "Required",
          "type": "ApiService | null"
        },
        {
          "name": "selected",
          "attribute": "selected",
          "description": "The person, company or text selected by the user.",
          "type": "SelectableEntity | null"
        },
        {
          "name": "validationMessage",
          "attribute": "validationMessage",
          "description": "Message to show in the error color when the element is invalid.",
          "type": "string"
        },
        {
          "name": "label",
          "attribute": "label",
          "description": "Sets floating label value.",
          "type": "string",
          "default": "\"Person or company\""
        },
        {
          "name": "placeholder",
          "attribute": "placeholder",
          "description": "Sets placeholder text value.",
          "type": "string",
          "default": "\"Search a person or company\""
        },
        {
          "name": "disabled",
          "attribute": "disabled",
          "description": "Whether or not the input should be disabled.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "required",
          "attribute": "required",
          "description": "Displays error state if no image is empty and input is blurred.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "validityTransform",
          "attribute": "validityTransform",
          "description": "Callback called before each validation check. See the mwc-textfield's validation section for more details.",
          "type": "() => { valid: boolean; valueMissing: boolean; } | { valid?: undefined; valueMissing?: undefined; }",
          "default": "\"() => {\\r\\n    if (this.required) {\\r\\n      return {\\r\\n        valid: !!this.selected,\\r\\n        valueMissing: !!this.selected,\\r\\n      };\\r\\n    }\\r\\n    return {};\\r\\n  }\""
        },
        {
          "name": "styles",
          "type": "CSSResult",
          "default": "\"css`\\r\\n    :host {\\r\\n      display: inline-block;\\r\\n      position: relative;\\r\\n      --mdc-menu-max-width: 550px;\\r\\n      --mdc-list-item-graphic-size: 40px;\\r\\n    }\\r\\n\\r\\n    mwc-textfield {\\r\\n      width: 100%;\\r\\n    }\\r\\n\\r\\n    mwc-linear-progress {\\r\\n      margin: 0 12px;\\r\\n    }\\r\\n\\r\\n    :host([shaped]) {\\r\\n      --mdc-shape-small: 28px;\\r\\n    }\\r\\n\\r\\n    :host([shallow]) {\\r\\n      --mdc-shape-small: 12px;\\r\\n    }\\r\\n\\r\\n    mwc-list-item mwc-icon {\\r\\n      color: var(--app-accent-color-blue, #4285f4);\\r\\n      --mdc-icon-size: 32px;\\r\\n    }\\r\\n\\r\\n    img[selected],\\r\\n    mwc-icon[selected],\\r\\n    profile-picture[selected] {\\r\\n      position: absolute;\\r\\n      top: 16px;\\r\\n      left: 16px;\\r\\n    }\\r\\n\\r\\n    img[selected] {\\r\\n      height: 24px;\\r\\n      width: 24px;\\r\\n    }\\r\\n\\r\\n    mwc-icon[selected] {\\r\\n      background: #fff;\\r\\n      /* --mdc-icon-size: 36px; */\\r\\n      color: var(--app-accent-color-blue, #4285f4);\\r\\n    }\\r\\n\\r\\n    [summary] {\\r\\n      padding: 0px 16px 4px 16px;\\r\\n      font-family: Roboto, Arial, sans-serif;\\r\\n      color: var(--app-light-text-color);\\r\\n      line-height: 18px;\\r\\n      font-size: 13px;\\r\\n    }\\r\\n  `\""
        },
        {
          "name": "formdata",
          "type": "FormDataEvent"
        },
        {
          "name": "mwc-notched-outline",
          "type": "NotchedOutline"
        },
        {
          "name": "mwc-ripple",
          "type": "Ripple"
        },
        {
          "name": "mwc-list-item",
          "type": "ListItem"
        },
        {
          "name": "mwc-list",
          "type": "List"
        },
        {
          "name": "mwc-menu-surface",
          "type": "MenuSurface"
        },
        {
          "name": "mwc-menu",
          "type": "MenuBase"
        },
        {
          "name": "mwc-icon",
          "type": "Icon"
        },
        {
          "name": "mwc-select",
          "type": "Select"
        },
        {
          "name": "mwc-textfield",
          "type": "TextField"
        },
        {
          "name": "mwc-linear-progress",
          "type": "LinearProgress"
        },
        {
          "name": "mwc-button",
          "type": "Button"
        },
        {
          "name": "mwc-icon-button",
          "type": "IconButton"
        },
        {
          "name": "mwc-dialog",
          "type": "Dialog"
        },
        {
          "name": "mwc-checkbox",
          "type": "Checkbox"
        },
        {
          "name": "mwc-formfield",
          "type": "Formfield"
        },
        {
          "name": "formData",
          "type": "FormData"
        },
        {
          "name": "floatingLabelFoundation",
          "type": "MDCFloatingLabelFoundation | undefined"
        },
        {
          "name": "lineRippleFoundation",
          "type": "MDCLineRippleFoundation | undefined"
        }
      ],
      "events": [
        {
          "name": "selected",
          "description": "Fired when selection is made or cleared"
        },
        {
          "name": "change"
        }
      ]
    },
    {
      "name": "leavitt-person-group-select",
      "path": "./..\\leavitt-elements\\src\\leavitt-person-group-select.ts",
      "description": "Single select input that searches both Leavitt Group employees and groups",
      "attributes": [
        {
          "name": "selected",
          "description": "The person or group object selected by the user.",
          "type": "Partial<Person | (PeopleGroup & { type: \"PeopleGroup\"; } & { odataType: string; })> | null"
        },
        {
          "name": "validationMessage",
          "description": "Message to show in the error color when the element is invalid.",
          "type": "string"
        },
        {
          "name": "label",
          "description": "Sets floating label value.",
          "type": "string",
          "default": "\"Person or group\""
        },
        {
          "name": "placeholder",
          "description": "Sets placeholder text value.",
          "type": "string",
          "default": "\"Search a person or group\""
        },
        {
          "name": "disabled",
          "description": "Whether or not the input should be disabled.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "required",
          "description": "Displays error state if no image is empty and input is blurred.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "validityTransform",
          "description": "Callback called before each validation check. See the mwc-textfield's validation section for more details.",
          "type": "() => { valid: boolean; valueMissing: boolean; } | { valid?: undefined; valueMissing?: undefined; }",
          "default": "\"() => {\\r\\n    if (this.required) {\\r\\n      return {\\r\\n        valid: !!this.selected,\\r\\n        valueMissing: !!this.selected,\\r\\n      };\\r\\n    }\\r\\n    return {};\\r\\n  }\""
        }
      ],
      "properties": [
        {
          "name": "apiService",
          "description": "Required",
          "type": "ApiService | null"
        },
        {
          "name": "selected",
          "attribute": "selected",
          "description": "The person or group object selected by the user.",
          "type": "Partial<Person | (PeopleGroup & { type: \"PeopleGroup\"; } & { odataType: string; })> | null"
        },
        {
          "name": "validationMessage",
          "attribute": "validationMessage",
          "description": "Message to show in the error color when the element is invalid.",
          "type": "string"
        },
        {
          "name": "label",
          "attribute": "label",
          "description": "Sets floating label value.",
          "type": "string",
          "default": "\"Person or group\""
        },
        {
          "name": "placeholder",
          "attribute": "placeholder",
          "description": "Sets placeholder text value.",
          "type": "string",
          "default": "\"Search a person or group\""
        },
        {
          "name": "disabled",
          "attribute": "disabled",
          "description": "Whether or not the input should be disabled.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "required",
          "attribute": "required",
          "description": "Displays error state if no image is empty and input is blurred.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "validityTransform",
          "attribute": "validityTransform",
          "description": "Callback called before each validation check. See the mwc-textfield's validation section for more details.",
          "type": "() => { valid: boolean; valueMissing: boolean; } | { valid?: undefined; valueMissing?: undefined; }",
          "default": "\"() => {\\r\\n    if (this.required) {\\r\\n      return {\\r\\n        valid: !!this.selected,\\r\\n        valueMissing: !!this.selected,\\r\\n      };\\r\\n    }\\r\\n    return {};\\r\\n  }\""
        },
        {
          "name": "styles",
          "type": "CSSResult",
          "default": "\"css`\\r\\n    :host {\\r\\n      display: inline-block;\\r\\n      position: relative;\\r\\n      --mdc-menu-max-width: 550px;\\r\\n      --mdc-list-item-graphic-size: 40px;\\r\\n    }\\r\\n\\r\\n    mwc-textfield {\\r\\n      width: 100%;\\r\\n    }\\r\\n\\r\\n    mwc-linear-progress {\\r\\n      margin: 0 12px;\\r\\n    }\\r\\n\\r\\n    :host([shaped]) {\\r\\n      --mdc-shape-small: 28px;\\r\\n    }\\r\\n\\r\\n    :host([shallow]) {\\r\\n      --mdc-shape-small: 12px;\\r\\n    }\\r\\n\\r\\n    mwc-list-item mwc-icon {\\r\\n      color: var(--app-accent-color-blue, #4285f4);\\r\\n      --mdc-icon-size: 40px;\\r\\n    }\\r\\n\\r\\n    mwc-icon[selected],\\r\\n    profile-picture[selected] {\\r\\n      position: absolute;\\r\\n      top: 16px;\\r\\n      left: 16px;\\r\\n    }\\r\\n\\r\\n    mwc-icon[selected] {\\r\\n      background: #fff;\\r\\n      --mdc-icon-size: 24px;\\r\\n      color: var(--app-accent-color-blue, #4285f4);\\r\\n    }\\r\\n\\r\\n    [summary] {\\r\\n      padding: 0px 16px 4px 16px;\\r\\n      font-family: Roboto, Arial, sans-serif;\\r\\n      color: var(--app-light-text-color, #80868b);\\r\\n      line-height: 18px;\\r\\n      font-size: 13px;\\r\\n    }\\r\\n  `\""
        },
        {
          "name": "formdata",
          "type": "FormDataEvent"
        },
        {
          "name": "mwc-notched-outline",
          "type": "NotchedOutline"
        },
        {
          "name": "mwc-ripple",
          "type": "Ripple"
        },
        {
          "name": "mwc-list-item",
          "type": "ListItem"
        },
        {
          "name": "mwc-list",
          "type": "List"
        },
        {
          "name": "mwc-menu-surface",
          "type": "MenuSurface"
        },
        {
          "name": "mwc-menu",
          "type": "MenuBase"
        },
        {
          "name": "mwc-icon",
          "type": "Icon"
        },
        {
          "name": "mwc-select",
          "type": "Select"
        },
        {
          "name": "mwc-textfield",
          "type": "TextField"
        },
        {
          "name": "mwc-linear-progress",
          "type": "LinearProgress"
        },
        {
          "name": "mwc-button",
          "type": "Button"
        },
        {
          "name": "mwc-icon-button",
          "type": "IconButton"
        },
        {
          "name": "mwc-dialog",
          "type": "Dialog"
        },
        {
          "name": "mwc-checkbox",
          "type": "Checkbox"
        },
        {
          "name": "mwc-formfield",
          "type": "Formfield"
        },
        {
          "name": "formData",
          "type": "FormData"
        },
        {
          "name": "floatingLabelFoundation",
          "type": "MDCFloatingLabelFoundation | undefined"
        },
        {
          "name": "lineRippleFoundation",
          "type": "MDCLineRippleFoundation | undefined"
        }
      ],
      "events": [
        {
          "name": "selected",
          "description": "Fired when selection is made or cleared"
        },
        {
          "name": "change"
        }
      ]
    },
    {
      "name": "leavitt-person-select",
      "path": "./..\\leavitt-elements\\src\\leavitt-person-select.ts",
      "description": "Single select input that searches Leavitt Group employees",
      "attributes": [
        {
          "name": "odataParts",
          "description": "Odata parts for the Company API call",
          "type": "string[]",
          "default": "[\"top=15\",\"orderby=FirstName\",\"select=FirstName,LastName,CompanyName,Id\",\"count=true\"]"
        },
        {
          "name": "selected",
          "description": "The person object selected by the user.",
          "type": "Person | null"
        },
        {
          "name": "validationMessage",
          "description": "Message to show in the error color when the element is invalid.",
          "type": "string"
        },
        {
          "name": "label",
          "description": "Sets floating label value.",
          "type": "string",
          "default": "\"Person\""
        },
        {
          "name": "apiControllerName",
          "description": "Set the name of the API controller to use",
          "type": "string",
          "default": "\"People\""
        },
        {
          "name": "placeholder",
          "description": "Sets placeholder text value.",
          "type": "string",
          "default": "\"Search for a person\""
        },
        {
          "name": "disabled",
          "description": "Whether or not the input should be disabled.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "required",
          "description": "Displays error state if no image is empty and input is blurred.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "helper",
          "description": "Helper text to display below the select. Always displays by default.",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "validityTransform",
          "description": "Callback called before each validation check. See the mwc-textfield's validation section for more details.",
          "type": "() => { valid: boolean; valueMissing: boolean; } | { valid?: undefined; valueMissing?: undefined; }",
          "default": "\"() => {\\r\\n    if (this.required) {\\r\\n      return {\\r\\n        valid: !!this.selected,\\r\\n        valueMissing: !!this.selected,\\r\\n      };\\r\\n    }\\r\\n    return {};\\r\\n  }\""
        }
      ],
      "properties": [
        {
          "name": "apiService",
          "description": "Required",
          "type": "ApiService"
        },
        {
          "name": "odataParts",
          "attribute": "odataParts",
          "description": "Odata parts for the Company API call",
          "type": "string[]",
          "default": "[\"top=15\",\"orderby=FirstName\",\"select=FirstName,LastName,CompanyName,Id\",\"count=true\"]"
        },
        {
          "name": "selected",
          "attribute": "selected",
          "description": "The person object selected by the user.",
          "type": "Person | null"
        },
        {
          "name": "validationMessage",
          "attribute": "validationMessage",
          "description": "Message to show in the error color when the element is invalid.",
          "type": "string"
        },
        {
          "name": "label",
          "attribute": "label",
          "description": "Sets floating label value.",
          "type": "string",
          "default": "\"Person\""
        },
        {
          "name": "apiControllerName",
          "attribute": "apiControllerName",
          "description": "Set the name of the API controller to use",
          "type": "string",
          "default": "\"People\""
        },
        {
          "name": "placeholder",
          "attribute": "placeholder",
          "description": "Sets placeholder text value.",
          "type": "string",
          "default": "\"Search for a person\""
        },
        {
          "name": "disabled",
          "attribute": "disabled",
          "description": "Whether or not the input should be disabled.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "required",
          "attribute": "required",
          "description": "Displays error state if no image is empty and input is blurred.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "helper",
          "attribute": "helper",
          "description": "Helper text to display below the select. Always displays by default.",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "validityTransform",
          "attribute": "validityTransform",
          "description": "Callback called before each validation check. See the mwc-textfield's validation section for more details.",
          "type": "() => { valid: boolean; valueMissing: boolean; } | { valid?: undefined; valueMissing?: undefined; }",
          "default": "\"() => {\\r\\n    if (this.required) {\\r\\n      return {\\r\\n        valid: !!this.selected,\\r\\n        valueMissing: !!this.selected,\\r\\n      };\\r\\n    }\\r\\n    return {};\\r\\n  }\""
        },
        {
          "name": "styles",
          "type": "CSSResult",
          "default": "\"css`\\r\\n    :host {\\r\\n      display: inline-block;\\r\\n      position: relative;\\r\\n      --mdc-menu-max-width: 550px;\\r\\n      --mdc-list-item-graphic-size: 40px;\\r\\n    }\\r\\n\\r\\n    mwc-textfield {\\r\\n      width: 100%;\\r\\n      background-color: var(--leavitt-person-select-background-color, #fff);\\r\\n      border-radius: 4px;\\r\\n    }\\r\\n\\r\\n    :host([shaped]) {\\r\\n      --mdc-shape-small: 28px;\\r\\n    }\\r\\n\\r\\n    :host([shallow]) {\\r\\n      --mdc-shape-small: 12px;\\r\\n    }\\r\\n\\r\\n    :host([shaped]) mwc-textfield {\\r\\n      border-radius: 28px;\\r\\n    }\\r\\n\\r\\n    :host([shallow]) mwc-textfield {\\r\\n      border-radius: 12px;\\r\\n    }\\r\\n\\r\\n    mwc-linear-progress {\\r\\n      margin: 0 12px;\\r\\n    }\\r\\n\\r\\n    profile-picture[selected] {\\r\\n      position: absolute;\\r\\n      top: 16px;\\r\\n      left: 16px;\\r\\n    }\\r\\n\\r\\n    [summary] {\\r\\n      padding: 0px 16px 4px 16px;\\r\\n      font-family: Roboto, Arial, sans-serif;\\r\\n      color: var(--app-light-text-color);\\r\\n      line-height: 18px;\\r\\n      font-size: 13px;\\r\\n    }\\r\\n  `\""
        },
        {
          "name": "formdata",
          "type": "FormDataEvent"
        },
        {
          "name": "mwc-notched-outline",
          "type": "NotchedOutline"
        },
        {
          "name": "mwc-ripple",
          "type": "Ripple"
        },
        {
          "name": "mwc-list-item",
          "type": "ListItem"
        },
        {
          "name": "mwc-list",
          "type": "List"
        },
        {
          "name": "mwc-menu-surface",
          "type": "MenuSurface"
        },
        {
          "name": "mwc-menu",
          "type": "MenuBase"
        },
        {
          "name": "mwc-icon",
          "type": "Icon"
        },
        {
          "name": "mwc-select",
          "type": "Select"
        },
        {
          "name": "mwc-textfield",
          "type": "TextField"
        },
        {
          "name": "mwc-linear-progress",
          "type": "LinearProgress"
        },
        {
          "name": "mwc-button",
          "type": "Button"
        },
        {
          "name": "mwc-icon-button",
          "type": "IconButton"
        },
        {
          "name": "mwc-dialog",
          "type": "Dialog"
        },
        {
          "name": "mwc-checkbox",
          "type": "Checkbox"
        },
        {
          "name": "mwc-formfield",
          "type": "Formfield"
        },
        {
          "name": "formData",
          "type": "FormData"
        },
        {
          "name": "floatingLabelFoundation",
          "type": "MDCFloatingLabelFoundation | undefined"
        },
        {
          "name": "lineRippleFoundation",
          "type": "MDCLineRippleFoundation | undefined"
        }
      ],
      "events": [
        {
          "name": "selected",
          "description": "Fired when selection is made or cleared"
        }
      ]
    },
    {
      "name": "mwc-datefield",
      "path": "./..\\leavitt-elements\\src\\mwc-datefield.ts",
      "attributes": [
        {
          "name": "date-type",
          "type": "\"date\" | \"datetime-local\"",
          "default": "\"date\""
        }
      ],
      "properties": [
        {
          "name": "dateType",
          "attribute": "date-type",
          "type": "\"date\" | \"datetime-local\"",
          "default": "\"date\""
        },
        {
          "name": "styles",
          "type": "CSSResult[]"
        },
        {
          "name": "value",
          "type": "string"
        },
        {
          "name": "type",
          "type": "string",
          "default": "\"date\""
        },
        {
          "name": "placeholder",
          "type": "string"
        },
        {
          "name": "label",
          "type": "string"
        },
        {
          "name": "icon",
          "type": "string"
        },
        {
          "name": "iconTrailing",
          "type": "string",
          "default": "\"event\""
        },
        {
          "name": "required",
          "type": "boolean"
        },
        {
          "name": "minLength",
          "type": "number"
        },
        {
          "name": "maxLength",
          "type": "number"
        },
        {
          "name": "outlined",
          "type": "boolean",
          "default": "true"
        },
        {
          "name": "helper",
          "type": "string"
        },
        {
          "name": "validateOnInitialRender",
          "type": "boolean"
        },
        {
          "name": "validationMessage",
          "type": "string"
        },
        {
          "name": "autoValidate",
          "type": "boolean"
        },
        {
          "name": "pattern",
          "type": "string"
        },
        {
          "name": "min",
          "type": "string | number"
        },
        {
          "name": "max",
          "type": "string | number"
        },
        {
          "name": "step",
          "description": "step can be a number or the keyword \"any\".\n\nUse `String` typing to pass down the value as a string and let the native\ninput cast internally as needed.",
          "type": "number | \"any\" | null"
        },
        {
          "name": "size",
          "type": "number | null"
        },
        {
          "name": "helperPersistent",
          "type": "boolean"
        },
        {
          "name": "charCounter",
          "type": "boolean | TextAreaCharCounter"
        },
        {
          "name": "endAligned",
          "type": "boolean"
        },
        {
          "name": "prefix",
          "type": "string"
        },
        {
          "name": "suffix",
          "type": "string"
        },
        {
          "name": "name",
          "type": "string"
        },
        {
          "name": "inputMode",
          "type": "TextFieldInputMode"
        },
        {
          "name": "readOnly",
          "type": "boolean"
        },
        {
          "name": "autocapitalize",
          "type": "string"
        },
        {
          "name": "validity",
          "type": "ValidityState"
        },
        {
          "name": "willValidate",
          "type": "boolean"
        },
        {
          "name": "selectionStart",
          "type": "number | null"
        },
        {
          "name": "selectionEnd",
          "type": "number | null"
        },
        {
          "name": "validityTransform",
          "type": "((value: string, nativeValidity: ValidityState) => Partial<ValidityState>) | null"
        },
        {
          "name": "shadowRootOptions",
          "type": "ShadowRootInit"
        },
        {
          "name": "disabled",
          "description": "Disabled state for the component. When `disabled` is set to `true`, the\ncomponent will not be added to form submission.",
          "type": "boolean"
        },
        {
          "name": "ripple",
          "description": "Implement ripple getter for Ripple integration with mwc-formfield",
          "type": "Promise<RippleInterface | null> | undefined"
        }
      ]
    },
    {
      "name": "leavitt-add-folder-modal",
      "path": "./..\\leavitt-file-explorer\\src\\leavitt-add-folder-modal.ts",
      "attributes": [
        {
          "name": "fileExplorerId",
          "type": "number"
        },
        {
          "name": "parentFolderId",
          "type": "number"
        }
      ],
      "properties": [
        {
          "name": "apiService",
          "description": "Required",
          "type": "ApiService | null"
        },
        {
          "name": "fileExplorerId",
          "attribute": "fileExplorerId",
          "type": "number"
        },
        {
          "name": "parentFolderId",
          "attribute": "parentFolderId",
          "type": "number"
        },
        {
          "name": "styles",
          "type": "CSSResult",
          "default": "\"css`\\r\\n    :host {\\r\\n      --titanium-dialog-max-width: 550px;\\r\\n    }\\r\\n\\r\\n    main {\\r\\n      display: grid;\\r\\n    }\\r\\n\\r\\n    @media (max-width: 520px) {\\r\\n      main {\\r\\n        min-width: 0;\\r\\n      }\\r\\n    }\\r\\n  `\""
        }
      ]
    },
    {
      "name": "leavitt-file-detail",
      "path": "./..\\leavitt-file-explorer\\src\\leavitt-file-detail.ts",
      "attributes": [
        {
          "name": "file",
          "type": "FileExplorerFileDto | null"
        },
        {
          "name": "enableEditing",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "file",
          "attribute": "file",
          "type": "FileExplorerFileDto | null"
        },
        {
          "name": "enableEditing",
          "attribute": "enableEditing",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "styles",
          "type": "CSSResult[]",
          "default": "[\"h1\",\"h2\",\"h5\",\"p\",\"a\",\"ellipsis\",null]"
        }
      ],
      "events": [
        {
          "name": "edit-click"
        },
        {
          "name": "close-click"
        }
      ]
    },
    {
      "name": "leavitt-file-edit",
      "path": "./..\\leavitt-file-explorer\\src\\leavitt-file-edit.ts",
      "attributes": [
        {
          "name": "file",
          "type": "Partial<FileExplorerFileDto> | null"
        }
      ],
      "properties": [
        {
          "name": "apiService",
          "description": "Required",
          "type": "ApiService | null"
        },
        {
          "name": "file",
          "attribute": "file",
          "type": "Partial<FileExplorerFileDto> | null"
        },
        {
          "name": "styles",
          "type": "CSSResult[]",
          "default": "[\"h1\",null]"
        }
      ],
      "events": [
        {
          "name": "save-click"
        },
        {
          "name": "cancel-click"
        }
      ]
    },
    {
      "name": "leavitt-file-explorer-error",
      "path": "./..\\leavitt-file-explorer\\src\\leavitt-file-explorer-error.ts",
      "properties": [
        {
          "name": "styles",
          "type": "CSSResult[]",
          "default": "[\"p\",null]"
        }
      ]
    },
    {
      "name": "leavitt-file-explorer-image",
      "path": "./..\\leavitt-file-explorer\\src\\leavitt-file-explorer-image.ts",
      "attributes": [
        {
          "name": "shape",
          "type": "\"circle\" | \"rounded\""
        },
        {
          "name": "attachment",
          "type": "Partial<Attachment>"
        }
      ],
      "properties": [
        {
          "name": "shape",
          "attribute": "shape",
          "type": "\"circle\" | \"rounded\""
        },
        {
          "name": "attachment",
          "attribute": "attachment",
          "type": "Partial<Attachment>"
        },
        {
          "name": "styles",
          "type": "CSSResult",
          "default": "\"css`\\r\\n    :host {\\r\\n      display: flex;\\r\\n      justify-content: center;\\r\\n      background: #fff;\\r\\n    }\\r\\n\\r\\n    img {\\r\\n      object-fit: cover;\\r\\n      object-position: 0 0;\\r\\n      width: 100%;\\r\\n      max-height: 100%;\\r\\n    }\\r\\n\\r\\n    :host([shape='rounded']) img {\\r\\n      border-radius: 12px;\\r\\n    }\\r\\n\\r\\n    :host([shape='rounded']) {\\r\\n      background-color: var(--app-hover-color);\\r\\n      border-radius: 12px;\\r\\n    }\\r\\n\\r\\n    :host([shape='circle']) img {\\r\\n      border-radius: 50%;\\r\\n    }\\r\\n\\r\\n    :host([shape='circle']) {\\r\\n      background-color: var(--app-hover-color);\\r\\n      border-radius: 50%;\\r\\n    }\\r\\n\\r\\n    mwc-icon {\\r\\n      height: 75%;\\r\\n      width: 75%;\\r\\n      user-select: none;\\r\\n      --mdc-icon-size: calc(3vw + 3vh);\\r\\n      color: var(--app-text-color, #5f6368);\\r\\n      text-align: center;\\r\\n      align-self: center;\\r\\n    }\\r\\n\\r\\n    span {\\r\\n      padding: 24px;\\r\\n      color: var(--app-light-text-color, #80868b);\\r\\n    }\\r\\n  `\""
        }
      ]
    },
    {
      "name": "leavitt-file-explorer-no-files",
      "path": "./..\\leavitt-file-explorer\\src\\leavitt-file-explorer-no-files.ts",
      "properties": [
        {
          "name": "styles",
          "type": "CSSResult[]",
          "default": "[\"p\",null]"
        }
      ]
    },
    {
      "name": "leavitt-file-explorer-no-permission",
      "path": "./..\\leavitt-file-explorer\\src\\leavitt-file-explorer-no-permission.ts",
      "properties": [
        {
          "name": "styles",
          "type": "CSSResult[]",
          "default": "[\"p\",null]"
        }
      ]
    },
    {
      "name": "leavitt-file-explorer",
      "path": "./..\\leavitt-file-explorer\\src\\leavitt-file-explorer.ts",
      "description": "Leavitt Group specific file explorer",
      "attributes": [
        {
          "name": "file-explorer-id",
          "description": "ID File explorer to display. This is required.",
          "type": "number",
          "default": "0"
        },
        {
          "name": "folder-id",
          "description": "Optional folder to show on first load rather than showing the root",
          "type": "number | null"
        },
        {
          "name": "prevent-navigation-up",
          "description": "Prevents a user from navigating up the folder tree past the initially provided folderId.\r\n\r\nFolderId must be set for this to operate properly.",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "fileExplorerId",
          "attribute": "file-explorer-id",
          "description": "ID File explorer to display. This is required.",
          "type": "number",
          "default": "0"
        },
        {
          "name": "folderId",
          "attribute": "folder-id",
          "description": "Optional folder to show on first load rather than showing the root",
          "type": "number | null"
        },
        {
          "name": "preventNavigationUp",
          "attribute": "prevent-navigation-up",
          "description": "Prevents a user from navigating up the folder tree past the initially provided folderId.\r\n\r\nFolderId must be set for this to operate properly.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "apiService",
          "description": "Required",
          "type": "ApiService | null"
        },
        {
          "name": "isAdmin",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "styles",
          "type": "CSSResult[]",
          "default": "[\"button\",\"h1\",\"ellipsis\",\"a\",null]"
        },
        {
          "name": "formdata",
          "type": "FormDataEvent"
        },
        {
          "name": "mwc-notched-outline",
          "type": "NotchedOutline"
        },
        {
          "name": "mwc-ripple",
          "type": "Ripple"
        },
        {
          "name": "mwc-list-item",
          "type": "ListItem"
        },
        {
          "name": "mwc-list",
          "type": "List"
        },
        {
          "name": "mwc-menu-surface",
          "type": "MenuSurface"
        },
        {
          "name": "mwc-menu",
          "type": "MenuBase"
        },
        {
          "name": "mwc-icon",
          "type": "Icon"
        },
        {
          "name": "mwc-select",
          "type": "Select"
        },
        {
          "name": "mwc-textfield",
          "type": "TextField"
        },
        {
          "name": "mwc-linear-progress",
          "type": "LinearProgress"
        },
        {
          "name": "mwc-button",
          "type": "Button"
        },
        {
          "name": "mwc-icon-button",
          "type": "IconButton"
        },
        {
          "name": "mwc-dialog",
          "type": "Dialog"
        },
        {
          "name": "mwc-checkbox",
          "type": "Checkbox"
        },
        {
          "name": "mwc-formfield",
          "type": "Formfield"
        },
        {
          "name": "formData",
          "type": "FormData"
        },
        {
          "name": "floatingLabelFoundation",
          "type": "MDCFloatingLabelFoundation | undefined"
        },
        {
          "name": "lineRippleFoundation",
          "type": "MDCLineRippleFoundation | undefined"
        }
      ],
      "events": [
        {
          "name": "folder-added",
          "description": "Fired when a new folder is added."
        },
        {
          "name": "folder-deleted",
          "description": "Fired when a folder is deleted."
        },
        {
          "name": "file-added",
          "description": "Fired when a new file is added."
        },
        {
          "name": "file-deleted",
          "description": "Fired when a file is deleted."
        }
      ],
      "cssProperties": [
        {
          "name": "--app-light-text-color",
          "type": "Color"
        },
        {
          "name": "--app-hover-color",
          "type": "Color"
        },
        {
          "name": "--app-text-color",
          "type": "Color"
        },
        {
          "name": "--app-accent-color-blue",
          "type": "Color"
        },
        {
          "name": "--app-border-color",
          "type": "Color"
        },
        {
          "name": "--app-primary-color",
          "type": "Color"
        },
        {
          "name": "--leavitt-file-explorer-font-family",
          "description": "Font family",
          "type": "Color"
        },
        {
          "name": "--leavitt-file-explorer-selected-bg-color",
          "description": "selected file and folder item bg color",
          "type": "Color"
        }
      ]
    },
    {
      "name": "leavitt-file-modal",
      "path": "./..\\leavitt-file-explorer\\src\\leavitt-file-modal.ts",
      "attributes": [
        {
          "name": "enableEditing",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "enableEditing",
          "attribute": "enableEditing",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "styles",
          "type": "CSSResult",
          "default": "\"css`\\r\\n    :host {\\r\\n      display: block;\\r\\n      --titanium-dialog-max-width: 850px;\\r\\n      --titanium-dialog-max-height: 850px;\\r\\n    }\\r\\n  `\""
        }
      ]
    },
    {
      "name": "leavitt-folder-detail",
      "path": "./..\\leavitt-file-explorer\\src\\leavitt-folder-detail.ts",
      "attributes": [
        {
          "name": "folder",
          "type": "FileExplorerFolderDto | null"
        },
        {
          "name": "enableEditing",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "folder",
          "attribute": "folder",
          "type": "FileExplorerFolderDto | null"
        },
        {
          "name": "enableEditing",
          "attribute": "enableEditing",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "styles",
          "type": "CSSResult[]",
          "default": "[\"h1\",\"h2\",\"h5\",\"p\",\"a\",\"ellipsis\",null]"
        }
      ],
      "events": [
        {
          "name": "edit-click"
        },
        {
          "name": "close-click"
        }
      ]
    },
    {
      "name": "leavitt-folder-edit",
      "path": "./..\\leavitt-file-explorer\\src\\leavitt-folder-edit.ts",
      "attributes": [
        {
          "name": "folder",
          "type": "FileExplorerFolderDto | null"
        }
      ],
      "properties": [
        {
          "name": "apiService",
          "description": "Required",
          "type": "ApiService | null"
        },
        {
          "name": "folder",
          "attribute": "folder",
          "type": "FileExplorerFolderDto | null"
        },
        {
          "name": "styles",
          "type": "CSSResult[]",
          "default": "[\"h1\",null]"
        }
      ],
      "events": [
        {
          "name": "save-click"
        },
        {
          "name": "cancel-click"
        }
      ]
    },
    {
      "name": "leavitt-folder-modal",
      "path": "./..\\leavitt-file-explorer\\src\\leavitt-folder-modal.ts",
      "attributes": [
        {
          "name": "enableEditing",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "enableEditing",
          "attribute": "enableEditing",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "styles",
          "type": "CSSResult",
          "default": "\"css`\\r\\n    :host {\\r\\n      display: block;\\r\\n      --titanium-dialog-max-width: 550px;\\r\\n    }\\r\\n  `\""
        }
      ]
    },
    {
      "name": "profile-picture-menu-popup",
      "path": "./..\\profile-picture\\src\\profile-picture-menu-popup.ts",
      "attributes": [
        {
          "name": "personId",
          "description": "Person id of user",
          "type": "number",
          "default": "0"
        },
        {
          "name": "email",
          "description": "Email address of user",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "company",
          "description": "Company of user",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "name",
          "description": "Full name of user",
          "type": "string",
          "default": "\"\""
        }
      ],
      "properties": [
        {
          "name": "personId",
          "attribute": "personId",
          "description": "Person id of user",
          "type": "number",
          "default": "0"
        },
        {
          "name": "email",
          "attribute": "email",
          "description": "Email address of user",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "company",
          "attribute": "company",
          "description": "Company of user",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "name",
          "attribute": "name",
          "description": "Full name of user",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "profilePicture",
          "type": "ProfilePictureElement"
        },
        {
          "name": "anchorElement",
          "type": "Element | null"
        },
        {
          "name": "anchorMarginBottom",
          "description": "Anchors margin from bottom",
          "type": "number"
        },
        {
          "name": "anchorMarginTop",
          "description": "Anchors margin from top",
          "type": "number"
        },
        {
          "name": "anchorMarginRight",
          "description": "Anchors margin from right",
          "type": "number"
        },
        {
          "name": "anchorMarginLeft",
          "description": "Anchors margin from left",
          "type": "number"
        },
        {
          "name": "anchorCorner",
          "description": "Defines the corner the surface is anchored to\r\nTOP_LEFT = 0\r\nTOP_RIGHT = 4\r\nBOTTOM_LEFT = 1\r\nBOTTOM_RIGHT = 5\r\nTOP_START = 8\r\nTOP_END = 12\r\nBOTTOM_START = 9\r\nBOTTOM_END = 13",
          "type": "Corner"
        },
        {
          "name": "isQuickOpen",
          "type": "boolean"
        },
        {
          "name": "isHoistedElement",
          "description": "Used to indicate if the menu-surface is hoisted to the body.",
          "type": "boolean"
        },
        {
          "name": "isFixedPosition",
          "description": "Used to set the menu-surface calculations based on a fixed position menu.",
          "type": "boolean"
        },
        {
          "name": "styles",
          "type": "CSSResult[]",
          "default": "[null,null]"
        }
      ]
    },
    {
      "name": "profile-picture-menu",
      "path": "./..\\profile-picture\\src\\profile-picture-menu.ts",
      "description": "Profile picture menu for the Leavitt Group",
      "attributes": [
        {
          "name": "size",
          "description": "Size in pixels of profile picture button",
          "type": "number",
          "default": "40"
        },
        {
          "name": "personId",
          "description": "Person id of user",
          "type": "number",
          "default": "0"
        },
        {
          "name": "email",
          "description": "Email address of user",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "company",
          "description": "Company of user",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "name",
          "description": "Full name of user",
          "type": "string",
          "default": "\"\""
        }
      ],
      "properties": [
        {
          "name": "size",
          "attribute": "size",
          "description": "Size in pixels of profile picture button",
          "type": "number",
          "default": "40"
        },
        {
          "name": "personId",
          "attribute": "personId",
          "description": "Person id of user",
          "type": "number",
          "default": "0"
        },
        {
          "name": "email",
          "attribute": "email",
          "description": "Email address of user",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "company",
          "attribute": "company",
          "description": "Company of user",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "profilePicture",
          "type": "ProfilePictureElement"
        },
        {
          "name": "popup",
          "type": "ProfilePictureMenuPopupElement"
        },
        {
          "name": "name",
          "attribute": "name",
          "description": "Full name of user",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "styles",
          "type": "CSSResult",
          "default": "\"css`\\r\\n    div {\\r\\n      display: inline-block;\\r\\n      position: relative;\\r\\n    }\\r\\n\\r\\n    profile-picture {\\r\\n      cursor: pointer;\\r\\n    }\\r\\n  `\""
        }
      ],
      "cssProperties": [
        {
          "name": "--app-dark-text-color",
          "description": "User's name color",
          "type": "Color"
        },
        {
          "name": "--app-text-color",
          "description": "Email address color",
          "type": "Color"
        },
        {
          "name": "--app-border-color",
          "description": "divider line color",
          "type": "Color"
        }
      ]
    },
    {
      "name": "profile-picture",
      "path": "./..\\profile-picture\\src\\profile-picture.ts",
      "description": "Displays a Leavitt Group users profile picture",
      "attributes": [
        {
          "name": "personId",
          "description": "Person id of user",
          "type": "number",
          "default": "0"
        },
        {
          "name": "shape",
          "description": "Shape of profile picture",
          "type": "\"circle\" | \"square\"",
          "default": "\"circle\""
        },
        {
          "name": "size",
          "description": "Size in pixels of profile picture",
          "type": "number",
          "default": "120"
        }
      ],
      "properties": [
        {
          "name": "personId",
          "attribute": "personId",
          "description": "Person id of user",
          "type": "number",
          "default": "0"
        },
        {
          "name": "shape",
          "attribute": "shape",
          "description": "Shape of profile picture",
          "type": "\"circle\" | \"square\"",
          "default": "\"circle\""
        },
        {
          "name": "size",
          "attribute": "size",
          "description": "Size in pixels of profile picture",
          "type": "number",
          "default": "120"
        },
        {
          "name": "styles",
          "type": "CSSResult",
          "default": "\"css`\\r\\n    :host {\\r\\n      display: inline-block;\\r\\n      white-space: normal;\\r\\n      flex-shrink: 0;\\r\\n    }\\r\\n\\r\\n    img {\\r\\n      display: block;\\r\\n      width: 100%;\\r\\n      image-rendering: -webkit-optimize-contrast;\\r\\n    }\\r\\n\\r\\n    :host([shape='circle']) img {\\r\\n      border-radius: 50%;\\r\\n    }\\r\\n  `\""
        }
      ]
    },
    {
      "name": "titanium-access-denied-page",
      "path": "./..\\titanium-access-denied-page\\src\\titanium-access-denied-page.ts",
      "description": "A pre-styled access denied page",
      "attributes": [
        {
          "name": "message",
          "description": "Reason text for the denial of access",
          "type": "string",
          "default": "\"You do not have permission to access this application.\""
        }
      ],
      "properties": [
        {
          "name": "message",
          "attribute": "message",
          "description": "Reason text for the denial of access",
          "type": "string",
          "default": "\"You do not have permission to access this application.\""
        },
        {
          "name": "styles",
          "type": "CSSResult",
          "default": "\"css`\\r\\n    :host {\\r\\n      display: flex;\\r\\n      flex-direction: row;\\r\\n      align-items: center;\\r\\n      justify-content: center;\\r\\n\\r\\n      font-family: Roboto, sans-serif;\\r\\n      -moz-osx-font-smoothing: grayscale;\\r\\n      -webkit-font-smoothing: antialiased;\\r\\n\\r\\n      max-width: 1300px;\\r\\n    }\\r\\n\\r\\n    header {\\r\\n      flex: 1 1 auto;\\r\\n      margin-right: 24px;\\r\\n    }\\r\\n\\r\\n    h1 {\\r\\n      font-family: Metropolis, 'Roboto', 'Noto', sans-serif;\\r\\n      font-weight: 600;\\r\\n      color: var(--app-text-color, #5f6368);\\r\\n      font-size: 68px;\\r\\n      line-height: 75px;\\r\\n      margin: 0;\\r\\n    }\\r\\n\\r\\n    h2 {\\r\\n      color: var(--app-text-color, #5f6368);\\r\\n      font-weight: 400;\\r\\n      margin: 8px 0 0 4px;\\r\\n      max-width: 75%;\\r\\n    }\\r\\n\\r\\n    p {\\r\\n      font-size: 16px;\\r\\n      margin-top: 8px;\\r\\n    }\\r\\n\\r\\n    svg {\\r\\n      flex-shrink: 0;\\r\\n      height: 280px;\\r\\n      width: 280px;\\r\\n    }\\r\\n\\r\\n    @media (max-width: 768px) {\\r\\n      :host {\\r\\n        margin-top: 24px;\\r\\n      }\\r\\n\\r\\n      h2 {\\r\\n        max-width: inherit;\\r\\n        font-size: 21px;\\r\\n      }\\r\\n\\r\\n      svg {\\r\\n        height: 120px;\\r\\n        width: 120px;\\r\\n        align-self: flex-start;\\r\\n      }\\r\\n\\r\\n      h1 {\\r\\n        font-size: 55px;\\r\\n        line-height: 65px;\\r\\n      }\\r\\n    }\\r\\n  `\""
        }
      ],
      "cssProperties": [
        {
          "name": "--app-text-color",
          "description": "Text and heading color",
          "type": "Color"
        }
      ]
    },
    {
      "name": "google-address-input",
      "path": "./..\\titanium-address-input\\src\\google-address-input.ts",
      "attributes": [
        {
          "name": "required",
          "type": "boolean"
        },
        {
          "name": "disabled",
          "type": "boolean"
        },
        {
          "name": "outlined",
          "type": "boolean"
        },
        {
          "name": "validationMessage",
          "type": "string"
        },
        {
          "name": "icon",
          "type": "string"
        },
        {
          "name": "iconTrailing",
          "type": "string"
        },
        {
          "name": "location",
          "type": "Partial<Address> | null"
        },
        {
          "name": "label",
          "type": "string",
          "default": "\"Address\""
        },
        {
          "name": "googleMapsApiKey",
          "type": "string"
        },
        {
          "name": "helper",
          "type": "string"
        },
        {
          "name": "helperPersistent",
          "type": "boolean"
        }
      ],
      "properties": [
        {
          "name": "required",
          "attribute": "required",
          "type": "boolean"
        },
        {
          "name": "disabled",
          "attribute": "disabled",
          "type": "boolean"
        },
        {
          "name": "outlined",
          "attribute": "outlined",
          "type": "boolean"
        },
        {
          "name": "validationMessage",
          "attribute": "validationMessage",
          "type": "string"
        },
        {
          "name": "icon",
          "attribute": "icon",
          "type": "string"
        },
        {
          "name": "iconTrailing",
          "attribute": "iconTrailing",
          "type": "string"
        },
        {
          "name": "location",
          "attribute": "location",
          "type": "Partial<Address> | null"
        },
        {
          "name": "label",
          "attribute": "label",
          "type": "string",
          "default": "\"Address\""
        },
        {
          "name": "googleMapsApiKey",
          "attribute": "googleMapsApiKey",
          "type": "string"
        },
        {
          "name": "helper",
          "attribute": "helper",
          "type": "string"
        },
        {
          "name": "helperPersistent",
          "attribute": "helperPersistent",
          "type": "boolean"
        },
        {
          "name": "input",
          "type": "TextField & { formElement: HTMLInputElement; mdcFoundation: { setValid(): boolean; }; isUiValid: boolean; }"
        },
        {
          "name": "styles",
          "type": "CSSResult",
          "default": "\"css`\\r\\n    :host {\\r\\n      display: flex;\\r\\n      flex-direction: column;\\r\\n    }\\r\\n  `\""
        }
      ],
      "events": [
        {
          "name": "location-changed"
        },
        {
          "name": "value-changed"
        }
      ]
    },
    {
      "name": "manual-address-dialog",
      "path": "./..\\titanium-address-input\\src\\manual-address-dialog.ts",
      "attributes": [
        {
          "name": "label",
          "type": "string",
          "default": "\"\""
        }
      ],
      "properties": [
        {
          "name": "label",
          "attribute": "label",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "styles",
          "type": "CSSResult",
          "default": "\"css`\\r\\n    titanium-dialog {\\r\\n      --titanium-dialog-max-width: 450px;\\r\\n    }\\r\\n  `\""
        }
      ]
    },
    {
      "name": "manual-address-form",
      "path": "./..\\titanium-address-input\\src\\manual-address-form.ts",
      "attributes": [
        {
          "name": "street",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "city",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "state",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "zip",
          "type": "string",
          "default": "\"\""
        }
      ],
      "properties": [
        {
          "name": "street",
          "attribute": "street",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "city",
          "attribute": "city",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "state",
          "attribute": "state",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "zip",
          "attribute": "zip",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "styles",
          "type": "CSSResult",
          "default": "\"css`\\r\\n    form {\\r\\n      display: grid;\\r\\n      gap: 24px;\\r\\n    }\\r\\n  `\""
        }
      ]
    },
    {
      "name": "titanium-address-input",
      "path": "./..\\titanium-address-input\\src\\titanium-address-input.ts",
      "attributes": [
        {
          "name": "required",
          "type": "boolean"
        },
        {
          "name": "outlined",
          "type": "boolean"
        },
        {
          "name": "validationMessage",
          "type": "string"
        },
        {
          "name": "location",
          "type": "Partial<Address> | null"
        },
        {
          "name": "label",
          "type": "string",
          "default": "\"Address\""
        },
        {
          "name": "icon",
          "type": "string"
        },
        {
          "name": "googleMapsApiKey",
          "type": "string"
        },
        {
          "name": "helper",
          "type": "string"
        },
        {
          "name": "helperPersistent",
          "type": "boolean"
        }
      ],
      "properties": [
        {
          "name": "required",
          "attribute": "required",
          "type": "boolean"
        },
        {
          "name": "outlined",
          "attribute": "outlined",
          "type": "boolean"
        },
        {
          "name": "validationMessage",
          "attribute": "validationMessage",
          "type": "string"
        },
        {
          "name": "location",
          "attribute": "location",
          "type": "Partial<Address> | null"
        },
        {
          "name": "label",
          "attribute": "label",
          "type": "string",
          "default": "\"Address\""
        },
        {
          "name": "icon",
          "attribute": "icon",
          "type": "string"
        },
        {
          "name": "googleMapsApiKey",
          "attribute": "googleMapsApiKey",
          "type": "string"
        },
        {
          "name": "helper",
          "attribute": "helper",
          "type": "string"
        },
        {
          "name": "helperPersistent",
          "attribute": "helperPersistent",
          "type": "boolean"
        },
        {
          "name": "styles",
          "type": "CSSResult",
          "default": "\"css`\\r\\n    :host {\\r\\n      display: grid;\\r\\n      grid-auto-flow: row;\\r\\n    }\\r\\n\\r\\n    a {\\r\\n      font-family: Roboto, Arial, sans-serif;\\r\\n      color: var(--app-link-color, #3b95ff);\\r\\n      justify-self: right;\\r\\n      padding: 3px 3px 0 0;\\r\\n      text-decoration: none;\\r\\n      font-weight: 500;\\r\\n      font-size: 12px;\\r\\n      cursor: pointer;\\r\\n    }\\r\\n\\r\\n    a:link,\\r\\n    a:visited,\\r\\n    a:hover {\\r\\n      text-decoration: none;\\r\\n    }\\r\\n  `\""
        }
      ],
      "events": [
        {
          "name": "location-changed"
        }
      ]
    },
    {
      "name": "titanium-attachment-input",
      "path": "./..\\titanium-attachment-input\\src\\titanium-attachment-input.ts",
      "description": "Material design inspired file input.",
      "attributes": [
        {
          "name": "required",
          "description": "Whether a selected file is required when reporting validity",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "multiple",
          "description": "Whether to allow selection of multiple files",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "disabled",
          "description": "Disables the input",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "label",
          "description": "Sets floating label value.",
          "type": "string",
          "default": "\"Attachment\""
        },
        {
          "name": "placeholder",
          "description": "Sets placeholder text value.",
          "type": "string",
          "default": "\"Select a file\""
        },
        {
          "name": "validationMessage",
          "description": "Message to show in the error color when the element is invalid.",
          "type": "string | null"
        },
        {
          "name": "allowedExtensions",
          "description": "What file types to allow or empty array to all all files. This will be bound to the accept attribute of the native input and used to fire @file-type-error if selected file does not match",
          "type": "string",
          "default": "\"png,svg,bmp,jpeg,jpg,exe,webp,iso,sv\""
        },
        {
          "name": "attachment",
          "description": "Optional: a preselected attachment used to populate the label and allow clearing",
          "type": "Partial<Attachment> | null"
        }
      ],
      "properties": [
        {
          "name": "required",
          "attribute": "required",
          "description": "Whether a selected file is required when reporting validity",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "multiple",
          "attribute": "multiple",
          "description": "Whether to allow selection of multiple files",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "disabled",
          "attribute": "disabled",
          "description": "Disables the input",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "label",
          "attribute": "label",
          "description": "Sets floating label value.",
          "type": "string",
          "default": "\"Attachment\""
        },
        {
          "name": "placeholder",
          "attribute": "placeholder",
          "description": "Sets placeholder text value.",
          "type": "string",
          "default": "\"Select a file\""
        },
        {
          "name": "validationMessage",
          "attribute": "validationMessage",
          "description": "Message to show in the error color when the element is invalid.",
          "type": "string | null"
        },
        {
          "name": "allowedExtensions",
          "attribute": "allowedExtensions",
          "description": "What file types to allow or empty array to all all files. This will be bound to the accept attribute of the native input and used to fire @file-type-error if selected file does not match",
          "type": "string",
          "default": "\"png,svg,bmp,jpeg,jpg,exe,webp,iso,sv\""
        },
        {
          "name": "attachment",
          "attribute": "attachment",
          "description": "Optional: a preselected attachment used to populate the label and allow clearing",
          "type": "Partial<Attachment> | null"
        },
        {
          "name": "styles",
          "type": "CSSResult[]",
          "default": "[null]"
        }
      ],
      "events": [
        {
          "name": "file-type-error",
          "description": "Fired when the user tries to select files with the wrong allowedFileType"
        },
        {
          "name": "change",
          "description": "Fired when files are selected or unselected"
        }
      ],
      "cssProperties": [
        {
          "name": "--app-primary-color",
          "description": "Input border and label color when a file is dragged over",
          "type": "Color"
        },
        {
          "name": "--material-error-text-color",
          "description": "Input border, label color, and error message color when input value is invalid",
          "type": "Color"
        },
        {
          "name": "--app-text-color",
          "description": "Placeholder color",
          "type": "Color"
        },
        {
          "name": "--titanium-input-placeholder-color",
          "description": "Color of icon button and placeholder text.",
          "type": "Color"
        }
      ]
    },
    {
      "name": "titanium-button",
      "path": "./..\\titanium-button\\src\\titanium-button.ts",
      "description": "Material design inspired button.",
      "attributes": [
        {
          "name": "disabled",
          "description": "Disables the button",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "raised",
          "description": "Applies the raised button style",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "outlined",
          "description": "Applies the  outlined button style",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "dense",
          "description": "Applies the  dense button style",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "unelevated",
          "description": "Applies the  unelevated button style",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "shaped",
          "description": "Increases border radius of button",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "disabled",
          "attribute": "disabled",
          "description": "Disables the button",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "raised",
          "attribute": "raised",
          "description": "Applies the raised button style",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "outlined",
          "attribute": "outlined",
          "description": "Applies the  outlined button style",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "dense",
          "attribute": "dense",
          "description": "Applies the  dense button style",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "unelevated",
          "attribute": "unelevated",
          "description": "Applies the  unelevated button style",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "shaped",
          "attribute": "shaped",
          "description": "Increases border radius of button",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "styles",
          "type": "CSSResult",
          "default": "\"css`\\r\\n    :host {\\r\\n      display: inline-flex;\\r\\n      font-family: Roboto, Noto, sans-serif;\\r\\n      -webkit-user-select: none; /* Chrome all / Safari all */\\r\\n      -moz-user-select: none; /* Firefox all */\\r\\n      -ms-user-select: none; /* IE 10+ */\\r\\n      user-select: none;\\r\\n      --mdc-theme-primary: var(--app-link-color, #3b95ff);\\r\\n    }\\r\\n\\r\\n    button {\\r\\n      /* Button Reset */\\r\\n      border: none;\\r\\n      outline: none;\\r\\n      margin: 0;\\r\\n      width: auto;\\r\\n      background: transparent;\\r\\n      /* inherit font & color from ancestor */\\r\\n      font: inherit;\\r\\n      /* Corrects font smoothing for webkit */\\r\\n      -webkit-font-smoothing: antialiased;\\r\\n      -moz-osx-font-smoothing: antialiased;\\r\\n      box-sizing: border-box;\\r\\n      min-width: 64px;\\r\\n      height: 36px;\\r\\n      display: block;\\r\\n      cursor: pointer;\\r\\n      color: var(--app-link-color, #3b95ff);\\r\\n      font-weight: 500;\\r\\n      font-size: 14px;\\r\\n      line-height: 16px;\\r\\n      letter-spacing: 1.25px;\\r\\n      padding: 0 16px;\\r\\n      border-radius: 4px;\\r\\n      outline: none;\\r\\n      position: relative;\\r\\n    }\\r\\n\\r\\n    button::-moz-focus-inner {\\r\\n      border: 0;\\r\\n    }\\r\\n\\r\\n    :host([shaped]) button {\\r\\n      border-radius: 18px;\\r\\n    }\\r\\n\\r\\n    :host([raised]:not([disabled])) {\\r\\n      --mdc-theme-primary: var(--app-link-color, #3b95ff);\\r\\n    }\\r\\n\\r\\n    :host([raised]:not([disabled])) button {\\r\\n      color: var(--titanium-solid-button-text-color, #fff);\\r\\n      background-color: var(--app-primary-color, #3b95ff);\\r\\n      --mdc-theme-primary: var(--app-primary-color, #3b95ff);\\r\\n      box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\\r\\n      transition: box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1) 0s;\\r\\n    }\\r\\n\\r\\n    :host([raised]:not([disabled])) button:active {\\r\\n      box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12);\\r\\n    }\\r\\n\\r\\n    :host([outlined]:not([disabled])) button {\\r\\n      border-color: var(--app-link-color, #3b95ff);\\r\\n    }\\r\\n\\r\\n    :host([outlined][disabled]) button {\\r\\n      border-color: transparent;\\r\\n    }\\r\\n\\r\\n    :host([outlined]) button {\\r\\n      border-style: solid;\\r\\n      border-width: 1px;\\r\\n    }\\r\\n\\r\\n    :host([dense]) button {\\r\\n      height: 28px;\\r\\n      padding: 0 16px;\\r\\n    }\\r\\n\\r\\n    :host([unelevated]:not([disabled])) button {\\r\\n      color: var(--titanium-solid-button-text-color, #fff);\\r\\n      background-color: var(--app-primary-color, #3b95ff);\\r\\n      --mdc-theme-primary: var(--app-primary-color, #3b95ff);\\r\\n    }\\r\\n\\r\\n    :host([disabled]) {\\r\\n      pointer-events: none;\\r\\n    }\\r\\n\\r\\n    mwc-ripple {\\r\\n      border-radius: 4px;\\r\\n      position: absolute;\\r\\n      width: 100%;\\r\\n      height: 100%;\\r\\n      top: 0;\\r\\n      right: 0;\\r\\n      overflow: hidden;\\r\\n    }\\r\\n\\r\\n    :host([shaped]) mwc-ripple {\\r\\n      border-radius: 18px;\\r\\n    }\\r\\n\\r\\n    :host([disabled]) button {\\r\\n      background-color: transparent;\\r\\n      color: rgba(0, 0, 0, 0.37);\\r\\n      cursor: default;\\r\\n    }\\r\\n  `\""
        }
      ],
      "slots": [
        {
          "name": "",
          "description": "main slot for button content"
        }
      ],
      "cssProperties": [
        {
          "name": "--app-link-color",
          "description": "Button slotted text color",
          "type": "Color"
        },
        {
          "name": "--titanium-solid-button-text-color",
          "description": "Button slotted text color for raised and unelevated styles",
          "type": "Color"
        },
        {
          "name": "--app-primary-color",
          "description": "Button BG color",
          "type": "Color"
        }
      ]
    },
    {
      "name": "titanium-toggle-button",
      "path": "./..\\titanium-button\\src\\titanium-toggle-button.ts",
      "description": "Material design inspired button.",
      "attributes": [
        {
          "name": "selected",
          "description": "Disables the button",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "disabled",
          "description": "Disables the button",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "outlined",
          "description": "Applies the  outlined button style",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "dense",
          "description": "Applies the  dense button style",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "shaped",
          "description": "Increases border radius of button",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "selected",
          "attribute": "selected",
          "description": "Disables the button",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "disabled",
          "attribute": "disabled",
          "description": "Disables the button",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "outlined",
          "attribute": "outlined",
          "description": "Applies the  outlined button style",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "dense",
          "attribute": "dense",
          "description": "Applies the  dense button style",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "shaped",
          "attribute": "shaped",
          "description": "Increases border radius of button",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "styles",
          "type": "CSSResult",
          "default": "\"css`\\r\\n    :host {\\r\\n      display: inline-flex;\\r\\n\\r\\n      font-family: Roboto, Noto, sans-serif;\\r\\n      -webkit-user-select: none; /* Chrome all / Safari all */\\r\\n      -ms-user-select: none; /* IE 10+ */\\r\\n      -moz-user-select: none; /* Firefox all */\\r\\n      user-select: none;\\r\\n      --mdc-theme-primary: var(--app-link-color, #3b95ff);\\r\\n    }\\r\\n\\r\\n    button {\\r\\n      /* Button Reset */\\r\\n      border: none;\\r\\n      outline: none;\\r\\n      margin: 0;\\r\\n      width: auto;\\r\\n      background: transparent;\\r\\n      /* inherit font & color from ancestor */\\r\\n      font: inherit;\\r\\n      /* Corrects font smoothing for webkit */\\r\\n      -webkit-font-smoothing: antialiased;\\r\\n      -moz-osx-font-smoothing: antialiased;\\r\\n      box-sizing: border-box;\\r\\n      min-width: 64px;\\r\\n      height: 36px;\\r\\n      display: block;\\r\\n      cursor: pointer;\\r\\n      color: var(--app-link-color, #3b95ff);\\r\\n      font-weight: 500;\\r\\n      font-size: 14px;\\r\\n      line-height: 16px;\\r\\n      letter-spacing: 1.25px;\\r\\n      padding: 0 16px;\\r\\n      border-radius: 4px;\\r\\n      outline: none;\\r\\n      position: relative;\\r\\n    }\\r\\n\\r\\n    button::-moz-focus-inner {\\r\\n      border: 0;\\r\\n    }\\r\\n\\r\\n    :host([shaped]) button {\\r\\n      border-radius: 18px;\\r\\n    }\\r\\n\\r\\n    :host([selected]:not([disabled])) button {\\r\\n      color: var(--titanium-selected-text-color, #fff);\\r\\n      background-color: var(--app-selected-color, #1a73e8);\\r\\n      --mdc-theme-primary: var(--app-selected-color, #1a73e8);\\r\\n    }\\r\\n\\r\\n    :host([outlined]:not([disabled])) button {\\r\\n      border-color: var(--app-link-color, #3b95ff);\\r\\n    }\\r\\n\\r\\n    :host([outlined][disabled]) button {\\r\\n      border-color: transparent;\\r\\n    }\\r\\n\\r\\n    :host([outlined]) button {\\r\\n      border-style: solid;\\r\\n      border-width: 1px;\\r\\n    }\\r\\n\\r\\n    :host([dense]) button {\\r\\n      height: 28px;\\r\\n      padding: 0 16px;\\r\\n    }\\r\\n\\r\\n    :host([disabled]) {\\r\\n      pointer-events: none;\\r\\n    }\\r\\n\\r\\n    :host([disabled]) button {\\r\\n      background-color: transparent;\\r\\n      color: rgba(0, 0, 0, 0.37);\\r\\n      cursor: default;\\r\\n    }\\r\\n\\r\\n    mwc-ripple {\\r\\n      border-radius: 4px;\\r\\n      position: absolute;\\r\\n      width: 100%;\\r\\n      height: 100%;\\r\\n      top: 0;\\r\\n      right: 0;\\r\\n      overflow: hidden;\\r\\n    }\\r\\n\\r\\n    :host([shaped]) mwc-ripple {\\r\\n      border-radius: 18px;\\r\\n    }\\r\\n  `\""
        }
      ],
      "events": [
        {
          "name": "selected-changed",
          "description": "Fired when user interaction causes selected prop to change."
        }
      ],
      "slots": [
        {
          "name": "",
          "description": "main slot for button content"
        }
      ],
      "cssProperties": [
        {
          "name": "--app-link-color",
          "description": "Button slotted text color",
          "type": "Color"
        },
        {
          "name": "--app-selected-color",
          "description": "Button selected background color",
          "type": "Color"
        },
        {
          "name": "--titanium-selected-text-color",
          "description": "Button slotted text color for when in the selected state",
          "type": "Color"
        },
        {
          "name": "--app-primary-color",
          "description": "Button BG color",
          "type": "Color"
        }
      ]
    },
    {
      "name": "titanium-card-list-item",
      "path": "./..\\titanium-card\\src\\titanium-card-list-item.ts",
      "description": "A list item for use inside a titanium-card",
      "attributes": [
        {
          "name": "title",
          "type": "string"
        },
        {
          "name": "disabled",
          "description": "Disables element.",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "title",
          "attribute": "title",
          "type": "string"
        },
        {
          "name": "disabled",
          "attribute": "disabled",
          "description": "Disables element.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "styles",
          "type": "CSSResult[]",
          "default": "[null]"
        }
      ],
      "events": [
        {
          "name": "item-click",
          "description": "Fired when the item is clicked"
        }
      ],
      "slots": [
        {
          "name": "",
          "description": "Item content (text)"
        }
      ],
      "cssProperties": [
        {
          "name": "--app-border-color",
          "description": "Border color",
          "type": "Color"
        },
        {
          "name": "--app-dark-text-color",
          "description": "Link text color",
          "type": "Color"
        }
      ]
    },
    {
      "name": "titanium-card-two-line-list-item",
      "path": "./..\\titanium-card\\src\\titanium-card-two-line-list-item.ts",
      "description": "A styled list item with image, title and sub header text styles for use in titanium-card.",
      "attributes": [
        {
          "name": "title",
          "type": "string"
        },
        {
          "name": "disabled",
          "description": "Disables element.",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "title",
          "attribute": "title",
          "type": "string"
        },
        {
          "name": "disabled",
          "attribute": "disabled",
          "description": "Disables element.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "styles",
          "type": "CSSResult[]",
          "default": "[null,null]"
        }
      ],
      "events": [
        {
          "name": "item-click",
          "description": "Fired when the item is clicked"
        }
      ],
      "slots": [
        {
          "name": "",
          "description": "Item content (text)"
        }
      ],
      "cssProperties": [
        {
          "name": "--app-border-color",
          "description": "Border color",
          "type": "Color"
        },
        {
          "name": "--app-dark-text-color",
          "description": "Link & Subheader text color",
          "type": "Color"
        },
        {
          "name": "--app-text-color",
          "description": "Link, svg & header text/fill color",
          "type": "Color"
        }
      ]
    },
    {
      "name": "titanium-card",
      "path": "./..\\titanium-card\\src\\titanium-card.ts",
      "description": "A card with h1,h2,h3 and p styles on-board",
      "attributes": [
        {
          "name": "elevation",
          "type": "\"high\" | undefined"
        },
        {
          "name": "has-menu",
          "type": "boolean"
        },
        {
          "name": "has-image",
          "type": "boolean"
        },
        {
          "name": "has-footer",
          "type": "boolean"
        }
      ],
      "properties": [
        {
          "name": "elevation",
          "attribute": "elevation",
          "type": "\"high\" | undefined"
        },
        {
          "name": "hasMenu",
          "attribute": "has-menu",
          "type": "boolean"
        },
        {
          "name": "hasImage",
          "attribute": "has-image",
          "type": "boolean"
        },
        {
          "name": "hasFooter",
          "attribute": "has-footer",
          "type": "boolean"
        },
        {
          "name": "styles",
          "type": "CSSResult[]",
          "default": "[null]"
        }
      ],
      "slots": [
        {
          "name": "",
          "description": "Card content"
        }
      ],
      "cssProperties": [
        {
          "name": "--app-border-color",
          "description": "Card border color",
          "type": "Color"
        }
      ]
    },
    {
      "name": "titanium-single-action-card",
      "path": "./..\\titanium-card\\src\\titanium-single-action-card.ts",
      "description": "A card with a built-in button on the bottom",
      "attributes": [
        {
          "name": "buttonTitle",
          "description": "Title of the single action button",
          "type": "string"
        },
        {
          "name": "disable-action",
          "description": "Disables the button on the card.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "elevation",
          "type": "\"high\" | undefined"
        },
        {
          "name": "has-menu",
          "type": "boolean"
        },
        {
          "name": "has-image",
          "type": "boolean"
        },
        {
          "name": "has-footer",
          "type": "boolean",
          "default": "true"
        }
      ],
      "properties": [
        {
          "name": "buttonTitle",
          "attribute": "buttonTitle",
          "description": "Title of the single action button",
          "type": "string"
        },
        {
          "name": "disableAction",
          "attribute": "disable-action",
          "description": "Disables the button on the card.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "elevation",
          "attribute": "elevation",
          "type": "\"high\" | undefined"
        },
        {
          "name": "hasMenu",
          "attribute": "has-menu",
          "type": "boolean"
        },
        {
          "name": "hasImage",
          "attribute": "has-image",
          "type": "boolean"
        },
        {
          "name": "hasFooter",
          "attribute": "has-footer",
          "type": "boolean",
          "default": "true"
        },
        {
          "name": "styles",
          "type": "CSSResult[]",
          "default": "[null,null]"
        }
      ],
      "events": [
        {
          "name": "action-click",
          "description": "Fired when the single action button is clicked"
        }
      ],
      "slots": [
        {
          "name": "",
          "description": "Card content"
        }
      ],
      "cssProperties": [
        {
          "name": "--app-border-color",
          "description": "Card border color",
          "type": "Color"
        },
        {
          "name": "--app-link-color",
          "description": "Link text color",
          "type": "Color"
        }
      ]
    },
    {
      "name": "titanium-chip-multi-select",
      "path": "./..\\titanium-chip-multi-select\\src\\titanium-chip-multi-select.ts",
      "description": "Multi select outlined themed input that styles\r\nslotted in chips and add button",
      "attributes": [
        {
          "name": "label",
          "description": "Label of input to display to users",
          "type": "string"
        },
        {
          "name": "noItemsText",
          "description": "Text to show when there are no items",
          "type": "string",
          "default": "\"No items\""
        },
        {
          "name": "hasItems",
          "description": "Indicates whether or not to show the no items text",
          "type": "boolean"
        },
        {
          "name": "helper",
          "description": "Sets helper text",
          "type": "string"
        },
        {
          "name": "disabled",
          "description": "Whether or not the input should be disabled.",
          "type": "boolean"
        }
      ],
      "properties": [
        {
          "name": "label",
          "attribute": "label",
          "description": "Label of input to display to users",
          "type": "string"
        },
        {
          "name": "noItemsText",
          "attribute": "noItemsText",
          "description": "Text to show when there are no items",
          "type": "string",
          "default": "\"No items\""
        },
        {
          "name": "hasItems",
          "attribute": "hasItems",
          "description": "Indicates whether or not to show the no items text",
          "type": "boolean"
        },
        {
          "name": "helper",
          "attribute": "helper",
          "description": "Sets helper text",
          "type": "string"
        },
        {
          "name": "disabled",
          "attribute": "disabled",
          "description": "Whether or not the input should be disabled.",
          "type": "boolean"
        },
        {
          "name": "styles",
          "type": "CSSResult[]",
          "default": "[null]"
        }
      ]
    },
    {
      "name": "titanium-chip",
      "path": "./..\\titanium-chip\\src\\titanium-chip.ts",
      "description": "Material design inspired chips.",
      "attributes": [
        {
          "name": "name",
          "description": "Name of the input for form submission, and identifier for the selection group.\r\nSelectable attribute must be present.",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "formElementTabIndex",
          "type": "number",
          "default": "0"
        },
        {
          "name": "label",
          "description": "Main text of the chip",
          "type": "string"
        },
        {
          "name": "closeIcon",
          "description": "Icon used for the close icon button",
          "type": "string",
          "default": "\"close\""
        },
        {
          "name": "src",
          "description": "Optional: src to image that will prefix the label",
          "type": "string | undefined"
        },
        {
          "name": "fallbackSrc",
          "description": "Optional: image shown if error loading src image attribute",
          "type": "string | undefined"
        },
        {
          "name": "disabled",
          "description": "Disables chip",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "closeable",
          "description": "Adds a close button to the chip when true",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "selectable",
          "description": "Enables ability for chip to be selectable and participate in a radio group",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "readonly",
          "description": "Enables ability for chip to be readonly",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "checked",
          "description": "Whether this chip is the currently-selected one in its group.",
          "type": "boolean"
        }
      ],
      "properties": [
        {
          "name": "name",
          "attribute": "name",
          "description": "Name of the input for form submission, and identifier for the selection group.\r\nSelectable attribute must be present.",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "formElementTabIndex",
          "attribute": "formElementTabIndex",
          "type": "number",
          "default": "0"
        },
        {
          "name": "label",
          "attribute": "label",
          "description": "Main text of the chip",
          "type": "string"
        },
        {
          "name": "closeIcon",
          "attribute": "closeIcon",
          "description": "Icon used for the close icon button",
          "type": "string",
          "default": "\"close\""
        },
        {
          "name": "src",
          "attribute": "src",
          "description": "Optional: src to image that will prefix the label",
          "type": "string | undefined"
        },
        {
          "name": "fallbackSrc",
          "attribute": "fallbackSrc",
          "description": "Optional: image shown if error loading src image attribute",
          "type": "string | undefined"
        },
        {
          "name": "disabled",
          "attribute": "disabled",
          "description": "Disables chip",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "closeable",
          "attribute": "closeable",
          "description": "Adds a close button to the chip when true",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "selectable",
          "attribute": "selectable",
          "description": "Enables ability for chip to be selectable and participate in a radio group",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "readonly",
          "attribute": "readonly",
          "description": "Enables ability for chip to be readonly",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "checked",
          "attribute": "checked",
          "description": "Whether this chip is the currently-selected one in its group.",
          "type": "boolean"
        },
        {
          "name": "styles",
          "type": "CSSResult",
          "default": "\"css`\\r\\n    :host {\\r\\n      display: inline-flex;\\r\\n      flex-direction: row;\\r\\n      align-items: center;\\r\\n      position: relative;\\r\\n      background-color: var(--titanium-chip-label-background-color, #fff);\\r\\n      border-radius: 16px;\\r\\n      cursor: pointer;\\r\\n      -webkit-user-select: none; /* Safari 3.1+ */\\r\\n      -moz-user-select: none; /* Firefox 2+ */\\r\\n      -ms-user-select: none; /* IE 10+ */\\r\\n      user-select: none; /* Standard syntax */\\r\\n      height: 30px;\\r\\n      max-width: 100%;\\r\\n      box-sizing: border-box;\\r\\n      border: 1px solid var(--app-border-color, #dadce0);\\r\\n    }\\r\\n\\r\\n    :host([disabled]) {\\r\\n      opacity: 0.6;\\r\\n      cursor: inherit;\\r\\n    }\\r\\n\\r\\n    :host([readonly]) {\\r\\n      cursor: inherit;\\r\\n    }\\r\\n\\r\\n    :host([checked]) label {\\r\\n      color: var(--titanium-side-menu-item-selected-color, #1967d2);\\r\\n      fill: var(--titanium-side-menu-item-selected-color, #1967d2);\\r\\n    }\\r\\n\\r\\n    :host([checked]) {\\r\\n      background: var(--titanium-side-menu-item-selected-background-color, #e8f0fe);\\r\\n    }\\r\\n\\r\\n    :host(:not([disabled]):not([readonly]):hover) {\\r\\n      background-color: var(--app-hover-color, #f9f9f9);\\r\\n      transition: 0.2s linear;\\r\\n    }\\r\\n\\r\\n    :host(:not([disabled]):not([readonly]):active) {\\r\\n      background-color: var(--app-hover-color, #f9f9f9);\\r\\n    }\\r\\n\\r\\n    label {\\r\\n      flex: 1 1 auto;\\r\\n      overflow: hidden;\\r\\n      white-space: nowrap;\\r\\n      text-overflow: ellipsis;\\r\\n      -webkit-font-smoothing: antialiased;\\r\\n      margin: 0 8px;\\r\\n      font-family: Roboto, Noto, sans-serif;\\r\\n      -webkit-font-smoothing: antialiased;\\r\\n      font-size: 14px;\\r\\n      line-height: 18px;\\r\\n      font-weight: 400;\\r\\n      color: var(--app-text-color, #5f6368);\\r\\n      cursor: pointer;\\r\\n    }\\r\\n\\r\\n    :host([readonly]) label,\\r\\n    :host([disabled]) label {\\r\\n      cursor: inherit;\\r\\n    }\\r\\n\\r\\n    img {\\r\\n      border-radius: 50%;\\r\\n      border: 1px solid transparent;\\r\\n      height: 28px;\\r\\n      width: 28px;\\r\\n      flex-shrink: 0;\\r\\n      image-rendering: -moz-crisp-edges; /* Firefox */\\r\\n      image-rendering: -o-crisp-edges; /* Opera */\\r\\n      image-rendering: -webkit-optimize-contrast; /* Webkit (non-standard naming) */\\r\\n      image-rendering: crisp-edges;\\r\\n    }\\r\\n\\r\\n    ::slotted(img),\\r\\n    ::slotted(svg) {\\r\\n      height: 18px;\\r\\n      width: 18px;\\r\\n      flex-shrink: 0;\\r\\n      image-rendering: -moz-crisp-edges; /* Firefox */\\r\\n      image-rendering: -o-crisp-edges; /* Opera */\\r\\n      image-rendering: -webkit-optimize-contrast; /* Webkit (non-standard naming) */\\r\\n      image-rendering: crisp-edges;\\r\\n    }\\r\\n\\r\\n    ::slotted(mwc-icon) {\\r\\n      --mdc-icon-size: 18px;\\r\\n      color: var(--app-text-color, #5f6368);\\r\\n      margin-left: 8px;\\r\\n      flex-shrink: 0;\\r\\n    }\\r\\n\\r\\n    :host([checked]) ::slotted(mwc-icon) {\\r\\n      color: var(--titanium-side-menu-item-selected-color, #1967d2);\\r\\n    }\\r\\n\\r\\n    mwc-icon-button {\\r\\n      color: var(--app-text-color, #5f6368);\\r\\n      --mdc-icon-size: 18px;\\r\\n      --mdc-icon-button-size: 28px;\\r\\n      flex-shrink: 0;\\r\\n    }\\r\\n\\r\\n    :host(:not([closeable])) mwc-icon-button {\\r\\n      display: none;\\r\\n    }\\r\\n\\r\\n    svg {\\r\\n      fill: var(--app-border-color, #dadce0);\\r\\n      width: 18px;\\r\\n      height: 18px;\\r\\n    }\\r\\n  `\""
        }
      ],
      "events": [
        {
          "name": "titanium-chip-close",
          "description": "Fired when the close button is clicked"
        },
        {
          "name": "checked",
          "description": "Fired when item is checked. Selectable attribute must be present."
        }
      ],
      "slots": [
        {
          "name": "chip-icon",
          "description": "Optional chip icon (replaces the image if src was provided)"
        },
        {
          "name": "label",
          "description": "Optional slot to override the label text"
        }
      ],
      "cssProperties": [
        {
          "name": "--app-border-color",
          "description": "Chip border color",
          "type": "Color"
        },
        {
          "name": "--app-text-color",
          "description": "Label color",
          "type": "Color"
        },
        {
          "name": "--titanium-chip-label-background-color",
          "description": "Chip background color",
          "type": "Color"
        },
        {
          "name": "--app-hover-color",
          "description": "Hover background color",
          "type": "Color"
        },
        {
          "name": "--titanium-side-menu-item-selected-background-color",
          "description": "Selected BG color",
          "type": "Color"
        },
        {
          "name": "--titanium-side-menu-item-selected-color",
          "description": "Checked text and icon color",
          "type": "Color"
        }
      ]
    },
    {
      "name": "titanium-data-table-header",
      "path": "./..\\titanium-data-table\\src\\titanium-data-table-header.ts",
      "description": "Material design data table header with styling and sorting capabilities",
      "attributes": [
        {
          "name": "title",
          "description": "This displayed header name",
          "type": "string"
        },
        {
          "name": "sortBy",
          "description": "The column name of the currently applied sort",
          "type": "string"
        },
        {
          "name": "width",
          "description": "Optional fixed width of header in px  ex. \"140px\"",
          "type": "string"
        },
        {
          "name": "active",
          "description": "True if header is currently the sorted column. Read-only, do not set.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "sort-direction",
          "description": "Current sort direction on header.",
          "type": "\"\" | \"asc\" | \"desc\""
        },
        {
          "name": "column-name",
          "description": "Name of header column passed along in sort-by-changed event.  Typically the name of the col in the backing DB. ex. first_name",
          "type": "string"
        },
        {
          "name": "center",
          "description": "Justify header text center",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "right",
          "description": "Justify header text right; moves sort icon to left.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "no-sort",
          "description": "Removes the sort icon",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "large",
          "description": "Set flex 5 on header, default is 3.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "desktop",
          "description": "Only show this header when width is larger",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "narrow",
          "description": "Sets if view port is small",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "title",
          "attribute": "title",
          "description": "This displayed header name",
          "type": "string"
        },
        {
          "name": "sortBy",
          "attribute": "sortBy",
          "description": "The column name of the currently applied sort",
          "type": "string"
        },
        {
          "name": "width",
          "attribute": "width",
          "description": "Optional fixed width of header in px  ex. \"140px\"",
          "type": "string"
        },
        {
          "name": "active",
          "attribute": "active",
          "description": "True if header is currently the sorted column. Read-only, do not set.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "sortDirection",
          "attribute": "sort-direction",
          "description": "Current sort direction on header.",
          "type": "\"\" | \"asc\" | \"desc\""
        },
        {
          "name": "columnName",
          "attribute": "column-name",
          "description": "Name of header column passed along in sort-by-changed event.  Typically the name of the col in the backing DB. ex. first_name",
          "type": "string"
        },
        {
          "name": "center",
          "attribute": "center",
          "description": "Justify header text center",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "right",
          "attribute": "right",
          "description": "Justify header text right; moves sort icon to left.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "noSort",
          "attribute": "no-sort",
          "description": "Removes the sort icon",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "large",
          "attribute": "large",
          "description": "Set flex 5 on header, default is 3.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "desktop",
          "attribute": "desktop",
          "description": "Only show this header when width is larger",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "narrow",
          "attribute": "narrow",
          "description": "Sets if view port is small",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "styles",
          "type": "CSSResult",
          "default": "\"css`\\r\\n    :host {\\r\\n      display: inline-flex;\\r\\n      flex-direction: row;\\r\\n      align-items: center;\\r\\n\\r\\n      -webkit-touch-callout: none;\\r\\n      -webkit-user-select: none;\\r\\n      -khtml-user-select: none;\\r\\n      -moz-user-select: none;\\r\\n      -ms-user-select: none;\\r\\n      user-select: none;\\r\\n\\r\\n      cursor: pointer;\\r\\n\\r\\n      font-family: var(--titanium-data-table-font-family, Roboto, Noto, sans-serif);\\r\\n      -webkit-font-smoothing: antialiased;\\r\\n      font-size: 14px;\\r\\n      padding: 8px;\\r\\n      line-height: 28px;\\r\\n      font-weight: 500;\\r\\n\\r\\n      color: var(--app-text-color, #5f6368);\\r\\n    }\\r\\n\\r\\n    :host(:not([width])) {\\r\\n      -ms-flex: 3;\\r\\n      -webkit-flex: 3;\\r\\n      flex: 3;\\r\\n    }\\r\\n\\r\\n    :host(:not([width])[large]) {\\r\\n      -ms-flex: 5;\\r\\n      -webkit-flex: 5;\\r\\n      flex: 5;\\r\\n    }\\r\\n\\r\\n    :host([active]) {\\r\\n      color: var(--app-text-color, #5f6368);\\r\\n    }\\r\\n\\r\\n    :host([hidden]) {\\r\\n      display: none;\\r\\n    }\\r\\n\\r\\n    :host([no-sort]) {\\r\\n      cursor: inherit;\\r\\n    }\\r\\n\\r\\n    :host([center]) {\\r\\n      justify-content: center;\\r\\n    }\\r\\n\\r\\n    :host([center])::before {\\r\\n      width: 18px;\\r\\n    }\\r\\n\\r\\n    :host([right]) {\\r\\n      flex-direction: row-reverse;\\r\\n    }\\r\\n\\r\\n    sort-icon {\\r\\n      height: 18px;\\r\\n      width: 18px;\\r\\n      margin-left: 4px;\\r\\n    }\\r\\n\\r\\n    :host([no-sort]) sort-icon {\\r\\n      display: none;\\r\\n    }\\r\\n\\r\\n    :host([right]) sort-icon {\\r\\n      margin-right: 4px;\\r\\n      margin-left: 0;\\r\\n    }\\r\\n\\r\\n    sort-icon svg {\\r\\n      display: none;\\r\\n      fill: var(--app-text-color, #5f6368);\\r\\n    }\\r\\n\\r\\n    :host([active][sort-direction='asc']) sort-icon svg {\\r\\n      transform: rotate(-180deg);\\r\\n      transition: transform 150ms ease;\\r\\n    }\\r\\n\\r\\n    :host([active][sort-direction='desc']) sort-icon svg {\\r\\n      transform: rotate(-360deg);\\r\\n      transition: transform 150ms ease;\\r\\n    }\\r\\n\\r\\n    :host([active][sort-direction='asc']) sort-icon svg,\\r\\n    :host([active][sort-direction='desc']) sort-icon svg {\\r\\n      display: block;\\r\\n      fill: var(--app-text-color, #5f6368);\\r\\n    }\\r\\n\\r\\n    :host([narrow][desktop]) {\\r\\n      display: none;\\r\\n    }\\r\\n  `\""
        }
      ],
      "events": [
        {
          "name": "sort-direction-changed",
          "description": "Fired if sort direction is changed (detail: 'desc' | 'asc')"
        },
        {
          "name": "sort-by-changed",
          "description": "Fired when the close button is clicked (detail: {string} column name of currently sorted header )"
        }
      ],
      "cssProperties": [
        {
          "name": "--app-text-color",
          "description": "Inactive sort icon color",
          "type": "Color"
        },
        {
          "name": "--app-light-text-color",
          "description": "Inactive text color",
          "type": "Color"
        },
        {
          "name": "--app-dark-text-color",
          "description": "Active text color",
          "type": "Color"
        }
      ]
    },
    {
      "name": "titanium-data-table-item",
      "path": "./..\\titanium-data-table\\src\\titanium-data-table-item.ts",
      "description": "A data table element to organize row data and handle row selection.\r\n\r\nrow-item positioning attributes:\r\n   - right\r\n   - desktop\r\n   - large\r\n   - center\r\n   - width - ex. \"140px\"",
      "attributes": [
        {
          "name": "item",
          "description": "The backing object that is display in this row.  Sent in navigate and selected events.",
          "type": "unknown"
        },
        {
          "name": "selected",
          "description": "True when row is selected.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "disable-select",
          "description": "Disables ability to select this row.",
          "type": "boolean"
        },
        {
          "name": "narrow",
          "description": "Sets if view port is small",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "enable-dragging",
          "description": "Set to true to make item draggable.  When items are dropped, the items in the list's array are sorted accordingly.\r\nIn order to reflect those updates out to the DOM, you will need to call requestUpdate on the items array when\r\nitems are dropped. ex.\r\n\r\n<titanium-data-table @titanium-data-table-items-reorder=${() => this.requestUpdate('items')} ... >",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "item",
          "attribute": "item",
          "description": "The backing object that is display in this row.  Sent in navigate and selected events.",
          "type": "unknown"
        },
        {
          "name": "selected",
          "attribute": "selected",
          "description": "True when row is selected.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "disableSelect",
          "attribute": "disable-select",
          "description": "Disables ability to select this row.",
          "type": "boolean"
        },
        {
          "name": "narrow",
          "attribute": "narrow",
          "description": "Sets if view port is small",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "enableDrag",
          "attribute": "enable-dragging",
          "description": "Set to true to make item draggable.  When items are dropped, the items in the list's array are sorted accordingly.\r\nIn order to reflect those updates out to the DOM, you will need to call requestUpdate on the items array when\r\nitems are dropped. ex.\r\n\r\n<titanium-data-table @titanium-data-table-items-reorder=${() => this.requestUpdate('items')} ... >",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "checkbox",
          "type": "Checkbox"
        },
        {
          "name": "itemContent",
          "type": "HTMLDivElement"
        },
        {
          "name": "styles",
          "type": "CSSResult",
          "default": "\"css`\\r\\n    :host {\\r\\n      display: block;\\r\\n\\r\\n      -webkit-touch-callout: none;\\r\\n      user-select: none;\\r\\n      text-decoration: none;\\r\\n\\r\\n      background-color: #fff;\\r\\n\\r\\n      font-family: var(--titanium-data-table-font-family, Roboto, Noto, sans-serif);\\r\\n      -webkit-font-smoothing: antialiased;\\r\\n\\r\\n      transition: none;\\r\\n      margin-top: -1px;\\r\\n      box-sizing: border-box;\\r\\n      border-bottom: 1px var(--app-border-color, #dadce0) solid;\\r\\n      border-top: 1px var(--app-border-color, #dadce0) solid;\\r\\n      position: relative;\\r\\n    }\\r\\n\\r\\n    :host(:not([disable-select])[selected]) {\\r\\n      background-color: #e8f0fe;\\r\\n    }\\r\\n\\r\\n    :host(:not([disable-select]):not([selected]):hover) {\\r\\n      background-color: var(--app-hover-color, #f9f9f9);\\r\\n    }\\r\\n\\r\\n    :host([enable-dragging]) {\\r\\n      cursor: grab;\\r\\n    }\\r\\n\\r\\n    mwc-icon[drag] {\\r\\n      display: none;\\r\\n      color: var(--app-border-color, #dadce0);\\r\\n      margin-right: -24px;\\r\\n    }\\r\\n\\r\\n    :host([enable-dragging]:hover) mwc-icon[drag] {\\r\\n      display: block;\\r\\n    }\\r\\n\\r\\n    :host([dragged]) {\\r\\n      box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);\\r\\n      transition: none;\\r\\n      overflow: hidden;\\r\\n      z-index: 1 !important;\\r\\n    }\\r\\n\\r\\n    /* Only have transition under dragging, because we don't want nudged\\r\\n     * items to transition into place once dragging is complete */\\r\\n    :host([dragging]:not([dragged])) {\\r\\n      transition: transform 0.2s ease-out;\\r\\n    }\\r\\n\\r\\n    /* :host {\\r\\n      transition: transform 0.2s ease-out;\\r\\n    } */\\r\\n\\r\\n    :host main {\\r\\n      display: flex;\\r\\n      flex-direction: row;\\r\\n      align-items: center;\\r\\n      min-height: 48px;\\r\\n    }\\r\\n\\r\\n    :host([enable-dragging]) div[item-footer] ::slotted(*) {\\r\\n      pointer-events: none;\\r\\n    }\\r\\n\\r\\n    ::slotted(row-item) {\\r\\n      display: block;\\r\\n      font-size: 14px;\\r\\n      line-height: 18px;\\r\\n      color: var(--app-text-color, #5f6368);\\r\\n      font-weight: 400;\\r\\n      padding: 4px 8px;\\r\\n      margin: 0;\\r\\n    }\\r\\n\\r\\n    ::slotted(row-item:last-of-type) {\\r\\n      padding-right: 24px;\\r\\n    }\\r\\n\\r\\n    ::slotted(row-item:not([width])) {\\r\\n      -ms-flex: 3;\\r\\n      -webkit-flex: 3;\\r\\n      flex: 3;\\r\\n    }\\r\\n\\r\\n    ::slotted(row-item:not([width])[large]) {\\r\\n      -ms-flex: 5;\\r\\n      -webkit-flex: 5;\\r\\n      flex: 5;\\r\\n    }\\r\\n\\r\\n    ::slotted(row-item[center]) {\\r\\n      text-align: center;\\r\\n    }\\r\\n\\r\\n    ::slotted(row-item[image]) {\\r\\n      display: inline-flex;\\r\\n      align-items: center;\\r\\n      gap: 12px;\\r\\n    }\\r\\n\\r\\n    ::slotted(row-item[right]) {\\r\\n      text-align: right;\\r\\n    }\\r\\n\\r\\n    mwc-checkbox {\\r\\n      flex-shrink: 0;\\r\\n      align-self: center;\\r\\n      margin: 0 0 0 9px;\\r\\n    }\\r\\n\\r\\n    :host([disable-select]) ::slotted(row-item:first-of-type) {\\r\\n      padding-left: 24px;\\r\\n    }\\r\\n\\r\\n    :host([narrow]) ::slotted(row-item[desktop]) {\\r\\n      display: none;\\r\\n    }\\r\\n\\r\\n    @media (max-width: 768px) {\\r\\n      :host([enable-dragging]) mwc-icon[drag] {\\r\\n        display: block;\\r\\n      }\\r\\n    }\\r\\n\\r\\n    [hidden] {\\r\\n      display: none;\\r\\n    }\\r\\n  `\""
        }
      ],
      "events": [
        {
          "name": "titanium-data-table-item-navigate",
          "description": "Fired on double click of a row. detail: unknown(this.item)"
        },
        {
          "name": "titanium-data-table-item-selected-changed",
          "description": "Fired when item is selected.  detail: { isSelected: boolean, item: unknown }"
        },
        {
          "name": "transitionend"
        }
      ],
      "slots": [
        {
          "name": "",
          "description": "Main slot that should contain a list of row-item elements"
        }
      ],
      "cssProperties": [
        {
          "name": "--app-text-color",
          "description": "Row text color",
          "type": "Color"
        },
        {
          "name": "--app-hover-color",
          "description": "Row hover color",
          "type": "Color"
        },
        {
          "name": "--app-border-color",
          "description": "Bottom division line",
          "type": "Color"
        },
        {
          "name": "--titanium-data-table-font-family",
          "description": "Set the font family of the data table item",
          "type": "Color"
        }
      ]
    },
    {
      "name": "titanium-data-table",
      "path": "./..\\titanium-data-table\\src\\titanium-data-table.ts",
      "description": "Material design inspired data table with paging, sorting, multi/single select, table actions, selected actions and more!",
      "attributes": [
        {
          "name": "header",
          "description": "Table heading / title",
          "type": "string"
        },
        {
          "name": "localStorageKey",
          "description": "Local storage key. Not required if header is static and unique",
          "type": "string"
        },
        {
          "name": "pageSizes",
          "description": "Available page sizes",
          "type": "number[]",
          "default": "[10,15,20,50]"
        },
        {
          "name": "default-page-size",
          "description": "The default page size before the user changes it",
          "type": "number",
          "default": "10"
        },
        {
          "name": "count",
          "description": "Total number of items in all pages.",
          "type": "number"
        },
        {
          "name": "items",
          "description": "Current items displayed on the table.",
          "type": "unknown[]",
          "default": "[]"
        },
        {
          "name": "searchTerm",
          "description": "Current search term shown in the no result state if no results are found",
          "type": "string"
        },
        {
          "name": "single-select",
          "description": "Limits table selection mode to single-select.  Default is multi-select.",
          "type": "boolean"
        },
        {
          "name": "disable-select",
          "description": "Disables all item section on the data-table.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "disable-paging",
          "description": "Disables paging.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "selected",
          "description": "Array of currently selected data table objects",
          "type": "unknown[]",
          "default": "[]"
        }
      ],
      "properties": [
        {
          "name": "header",
          "attribute": "header",
          "description": "Table heading / title",
          "type": "string"
        },
        {
          "name": "localStorageKey",
          "attribute": "localStorageKey",
          "description": "Local storage key. Not required if header is static and unique",
          "type": "string"
        },
        {
          "name": "pageSizes",
          "attribute": "pageSizes",
          "description": "Available page sizes",
          "type": "number[]",
          "default": "[10,15,20,50]"
        },
        {
          "name": "defaultPageSize",
          "attribute": "default-page-size",
          "description": "The default page size before the user changes it",
          "type": "number",
          "default": "10"
        },
        {
          "name": "count",
          "attribute": "count",
          "description": "Total number of items in all pages.",
          "type": "number"
        },
        {
          "name": "items",
          "attribute": "items",
          "description": "Current items displayed on the table.",
          "type": "unknown[]",
          "default": "[]"
        },
        {
          "name": "searchTerm",
          "attribute": "searchTerm",
          "description": "Current search term shown in the no result state if no results are found",
          "type": "string"
        },
        {
          "name": "singleSelect",
          "attribute": "single-select",
          "description": "Limits table selection mode to single-select.  Default is multi-select.",
          "type": "boolean"
        },
        {
          "name": "disableSelect",
          "attribute": "disable-select",
          "description": "Disables all item section on the data-table.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "disablePaging",
          "attribute": "disable-paging",
          "description": "Disables paging.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "selected",
          "attribute": "selected",
          "description": "Array of currently selected data table objects",
          "type": "unknown[]",
          "default": "[]"
        },
        {
          "name": "itemsSlot",
          "type": "HTMLSlotElement"
        },
        {
          "name": "itemsContainer",
          "type": "HTMLDivElement"
        },
        {
          "name": "checkbox",
          "type": "Checkbox"
        },
        {
          "name": "pageControl",
          "type": "TitaniumPageControlElement"
        },
        {
          "name": "styles",
          "type": "CSSResult[]",
          "default": "[\"h1\",\"ellipsis\",null]"
        }
      ],
      "events": [
        {
          "name": "selected-changed",
          "description": "Fired when a row or rows in the data table is selected. detail: array<unknown>"
        },
        {
          "name": "page-changed",
          "description": "DEPRECATED Use `paging-changed` instead."
        },
        {
          "name": "take-changed",
          "description": "DEPRECATED Use `paging-changed` instead."
        },
        {
          "name": "titanium-data-table-items-reorder",
          "description": "Fired when table items are resorted by user."
        },
        {
          "name": "paging-changed",
          "description": "Fired when take or page is changed by click or keyboard action. Replaces `take-changed` and `page-changed`."
        }
      ],
      "slots": [
        {
          "name": "table-actions",
          "description": "item nonspecific table buttons such as add new item"
        },
        {
          "name": "filter-button",
          "description": "filter button slot"
        },
        {
          "name": "filters",
          "description": "filter chips slot"
        },
        {
          "name": "search-button",
          "description": "search button slot"
        },
        {
          "name": "selected-actions",
          "description": "item specific table buttons such as edit, delete shown when one or more items are selected"
        },
        {
          "name": "table-headers",
          "description": "slot for table headers (ex. titanium-data-table-header)"
        },
        {
          "name": "items",
          "description": "slot for table rows (ex. titanium-data-table-item)"
        },
        {
          "name": "footer",
          "description": "slot for additional footer items. Slotting here overwrites footer-buttons."
        },
        {
          "name": "footer-buttons",
          "description": "slot for footer action buttons"
        }
      ],
      "cssProperties": [
        {
          "name": "--app-text-color",
          "description": "No results text color",
          "type": "Color"
        },
        {
          "name": "--app-dark-text-color",
          "description": "Heading and table control color",
          "type": "Color"
        },
        {
          "name": "--app-light-text-color",
          "description": "Select all checkbox fill color",
          "type": "Color"
        },
        {
          "name": "--app-border-color",
          "description": "Table border color",
          "type": "Color"
        },
        {
          "name": "--titanium-data-table-font-family",
          "description": "Set the font family used on the data table and paging control",
          "type": "Color"
        }
      ]
    },
    {
      "name": "titanium-page-control",
      "path": "./..\\titanium-data-table\\src\\titanium-page-control.ts",
      "description": "Material design page control with page size selector!",
      "attributes": [
        {
          "name": "pageSizes",
          "description": "Available page sizes",
          "type": "number[]",
          "default": "[10,15,20,50]"
        },
        {
          "name": "default-page-size",
          "description": "The default page size before the user changes it",
          "type": "number",
          "default": "10"
        },
        {
          "name": "page",
          "description": "Current page of data the table is on",
          "type": "number",
          "default": "0"
        },
        {
          "name": "count",
          "description": "Total number of items in all pages.",
          "type": "number"
        },
        {
          "name": "localStorageKey",
          "description": "Local storage key to save the current page size.",
          "type": "string"
        },
        {
          "name": "label",
          "description": "Label for the page control. If not provided, defaults to 'Items per page'.",
          "type": "string",
          "default": "\"Items per page\""
        },
        {
          "name": "disabled",
          "description": "Disables the page control select and page navigation buttons when true",
          "type": "boolean"
        },
        {
          "name": "take",
          "description": "Gets or sets take value and assigns it to local storage.",
          "type": "number"
        }
      ],
      "properties": [
        {
          "name": "pageSizes",
          "attribute": "pageSizes",
          "description": "Available page sizes",
          "type": "number[]",
          "default": "[10,15,20,50]"
        },
        {
          "name": "defaultPageSize",
          "attribute": "default-page-size",
          "description": "The default page size before the user changes it",
          "type": "number",
          "default": "10"
        },
        {
          "name": "page",
          "attribute": "page",
          "description": "Current page of data the table is on",
          "type": "number",
          "default": "0"
        },
        {
          "name": "count",
          "attribute": "count",
          "description": "Total number of items in all pages.",
          "type": "number"
        },
        {
          "name": "localStorageKey",
          "attribute": "localStorageKey",
          "description": "Local storage key to save the current page size.",
          "type": "string"
        },
        {
          "name": "label",
          "attribute": "label",
          "description": "Label for the page control. If not provided, defaults to 'Items per page'.",
          "type": "string",
          "default": "\"Items per page\""
        },
        {
          "name": "disabled",
          "attribute": "disabled",
          "description": "Disables the page control select and page navigation buttons when true",
          "type": "boolean"
        },
        {
          "name": "take",
          "attribute": "take",
          "description": "Gets or sets take value and assigns it to local storage.",
          "type": "number"
        },
        {
          "name": "styles",
          "type": "CSSResult",
          "default": "\"css`\\r\\n    :host {\\r\\n      display: inline-block;\\r\\n      font-family: var(--titanium-page-control-font-family, Roboto, Noto, sans-serif);\\r\\n      -webkit-font-smoothing: antialiased;\\r\\n    }\\r\\n\\r\\n    mwc-icon-button {\\r\\n      --mdc-icon-button-size: 32px;\\r\\n    }\\r\\n\\r\\n    table-controls {\\r\\n      display: flex;\\r\\n      flex-direction: row;\\r\\n      flex-wrap: wrap;\\r\\n      justify-content: space-between;\\r\\n      align-items: center;\\r\\n      max-width: 450px;\\r\\n      min-width: 0;\\r\\n\\r\\n      font-size: 14px;\\r\\n      font-weight: 400;\\r\\n      letter-spacing: 0.011em;\\r\\n      line-height: 20px;\\r\\n      color: var(--app-dark-text-color, #202124);\\r\\n      gap: 8px;\\r\\n    }\\r\\n\\r\\n    table-paging {\\r\\n      display: flex;\\r\\n    }\\r\\n\\r\\n    take-control {\\r\\n      display: flex;\\r\\n      flex-direction: row;\\r\\n      align-items: center;\\r\\n      gap: 12px;\\r\\n      min-width: 0;\\r\\n    }\\r\\n\\r\\n    take-control mwc-select {\\r\\n      max-width: 100px;\\r\\n      --mdc-shape-small: 24px;\\r\\n    }\\r\\n\\r\\n    pagination-text {\\r\\n      text-align: center;\\r\\n      user-select: none;\\r\\n      padding-left: 12px;\\r\\n    }\\r\\n\\r\\n    [hidden] {\\r\\n      display: none;\\r\\n    }\\r\\n  `\""
        }
      ],
      "events": [
        {
          "name": "action",
          "description": "Fired when take or page is changed by click or keyboard action. Replaces `take-changed` and `page-changed`."
        }
      ],
      "cssProperties": [
        {
          "name": "--app-dark-text-color",
          "description": "page control text color",
          "type": "Color"
        },
        {
          "name": "--titanium-page-control-font-family",
          "description": "page control font family",
          "type": "Color"
        }
      ]
    },
    {
      "name": "confirm-dialog",
      "path": "./..\\titanium-dialog\\src\\confirm-dialog.ts",
      "properties": [
        {
          "name": "styles",
          "type": "CSSResult[]",
          "default": "[\"p\",null]"
        }
      ]
    },
    {
      "name": "titanium-dialog-base",
      "path": "./..\\titanium-dialog\\src\\titanium-dialog-base.ts",
      "description": "Material design inspired dialog base element",
      "attributes": [
        {
          "name": "focus-trap",
          "description": "Prevents focusing of elements outside of the opened dialog.\r\nIf you choose to use focus trap you must slot in your own buttons\r\nas the default will no longer be available to you.",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "focusTrap",
          "attribute": "focus-trap",
          "description": "Prevents focusing of elements outside of the opened dialog.\r\nIf you choose to use focus trap you must slot in your own buttons\r\nas the default will no longer be available to you.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "styles",
          "type": "CSSResult[]",
          "default": "[null]"
        }
      ],
      "events": [
        {
          "name": "titanium-dialog-opened",
          "description": "Fired after open animation is complete"
        }
      ],
      "slots": [
        {
          "name": "",
          "description": "dialog content"
        }
      ],
      "cssProperties": [
        {
          "name": "--titanium-dialog-background-color",
          "description": "Background color of the dialog",
          "type": "Color"
        },
        {
          "name": "--titanium-dialog-max-width",
          "description": "Max-width of dialog container",
          "type": "<length> | <percentage> | none | max-content | min-content | fit-content | fill-available"
        }
      ]
    },
    {
      "name": "titanium-dialog",
      "path": "./..\\titanium-dialog\\src\\titanium-dialog.ts",
      "description": "Material design inspired dialog",
      "attributes": [
        {
          "name": "header",
          "description": "Dialog title text",
          "type": "string"
        },
        {
          "name": "disableSmoothScroll",
          "description": "Disables momentum-based scrolling on (webkit only)",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "focus-trap",
          "description": "Prevents focusing of elements outside of the opened dialog.\r\nIf you choose to use focus trap you must slot in your own buttons\r\nas the default will no longer be available to you.",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "header",
          "attribute": "header",
          "description": "Dialog title text",
          "type": "string"
        },
        {
          "name": "disableSmoothScroll",
          "attribute": "disableSmoothScroll",
          "description": "Disables momentum-based scrolling on (webkit only)",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "section",
          "type": "HTMLElement"
        },
        {
          "name": "focusTrap",
          "attribute": "focus-trap",
          "description": "Prevents focusing of elements outside of the opened dialog.\r\nIf you choose to use focus trap you must slot in your own buttons\r\nas the default will no longer be available to you.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "styles",
          "type": "CSSResult[]",
          "default": "[null,\"h1\",\"p\",null]"
        }
      ],
      "events": [
        {
          "name": "titanium-dialog-opened",
          "description": "Fired after open animation is complete"
        }
      ],
      "slots": [
        {
          "name": "content",
          "description": "dialog content"
        },
        {
          "name": "actions",
          "description": "dialog buttons (if provided will overwrite the default close button)"
        },
        {
          "name": "",
          "description": "dialog content"
        }
      ],
      "cssProperties": [
        {
          "name": "--titanium-dialog-background-color",
          "description": "Background color of the dialog",
          "type": "Color"
        },
        {
          "name": "--titanium-dialog-max-width",
          "description": "Max-width of dialog container",
          "type": "<length> | <percentage> | none | max-content | min-content | fit-content | fill-available"
        },
        {
          "name": "--app-light-text-color",
          "description": "Content text color",
          "type": "Color"
        },
        {
          "name": "--app-dark-text-color",
          "description": "Dialog header color",
          "type": "Color"
        },
        {
          "name": "--app-border-color",
          "description": "Dialog border color",
          "type": "Color"
        },
        {
          "name": "--app-primary-color",
          "description": "Dialog default button text color",
          "type": "Color"
        }
      ]
    },
    {
      "name": "titanium-error-page",
      "path": "./..\\titanium-error-page\\src\\titanium-error-page.ts",
      "description": "A pre-styled error page",
      "attributes": [
        {
          "name": "message",
          "description": "Reason text for the error",
          "type": "string",
          "default": "\"We were unable to find the page you are looking for...\""
        }
      ],
      "properties": [
        {
          "name": "message",
          "attribute": "message",
          "description": "Reason text for the error",
          "type": "string",
          "default": "\"We were unable to find the page you are looking for...\""
        },
        {
          "name": "styles",
          "type": "CSSResult",
          "default": "\"css`\\r\\n    :host {\\r\\n      display: flex;\\r\\n      flex-direction: row;\\r\\n      align-items: center;\\r\\n      justify-content: center;\\r\\n\\r\\n      font-family: Roboto, sans-serif;\\r\\n      -moz-osx-font-smoothing: grayscale;\\r\\n      -webkit-font-smoothing: antialiased;\\r\\n\\r\\n      max-width: 1300px;\\r\\n    }\\r\\n\\r\\n    header {\\r\\n      flex: 1 1 auto;\\r\\n      margin-right: 24px;\\r\\n    }\\r\\n\\r\\n    h1 {\\r\\n      font-family: Metropolis, 'Roboto', 'Noto', sans-serif;\\r\\n      font-weight: 600;\\r\\n      color: var(--app-text-color, #5f6368);\\r\\n      font-size: 75px;\\r\\n      line-height: 85px;\\r\\n      margin: 0;\\r\\n    }\\r\\n\\r\\n    h2 {\\r\\n      color: var(--app-text-color, #5f6368);\\r\\n      font-weight: 400;\\r\\n      margin: 8px 0 0 4px;\\r\\n      max-width: 75%;\\r\\n    }\\r\\n\\r\\n    img {\\r\\n      flex-shrink: 0;\\r\\n      height: 280px;\\r\\n      width: 280px;\\r\\n    }\\r\\n\\r\\n    @media (max-width: 768px) {\\r\\n      :host {\\r\\n        margin-top: 24px;\\r\\n      }\\r\\n\\r\\n      h2 {\\r\\n        max-width: inherit;\\r\\n        font-size: 21px;\\r\\n      }\\r\\n\\r\\n      img {\\r\\n        height: 120px;\\r\\n        width: 120px;\\r\\n        align-self: flex-start;\\r\\n      }\\r\\n\\r\\n      h1 {\\r\\n        font-size: 55px;\\r\\n        line-height: 65px;\\r\\n      }\\r\\n    }\\r\\n  `\""
        }
      ],
      "cssProperties": [
        {
          "name": "--app-text-color",
          "description": "Text and heading color",
          "type": "Color"
        }
      ]
    },
    {
      "name": "titanium-header",
      "path": "./..\\titanium-header\\src\\titanium-header.ts",
      "description": "A pre-styled page header with sub header and optional back button.",
      "attributes": [
        {
          "name": "header",
          "description": "Header text",
          "type": "string"
        },
        {
          "name": "subHeader",
          "description": "Sub-header text",
          "type": "string"
        },
        {
          "name": "no-nav",
          "description": "Removes the back button",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "header",
          "attribute": "header",
          "description": "Header text",
          "type": "string"
        },
        {
          "name": "subHeader",
          "attribute": "subHeader",
          "description": "Sub-header text",
          "type": "string"
        },
        {
          "name": "noNav",
          "attribute": "no-nav",
          "description": "Removes the back button",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "styles",
          "type": "CSSResult[]",
          "default": "[\"h1\",\"h3\",null]"
        }
      ],
      "events": [
        {
          "name": "titanium-header-back-click",
          "description": "Fired when the back button is clicked"
        }
      ],
      "cssProperties": [
        {
          "name": "--app-dark-text-color",
          "description": "Header text color",
          "type": "Color"
        },
        {
          "name": "--app-text-color",
          "description": "Sub-header text color",
          "type": "Color"
        }
      ]
    },
    {
      "name": "titanium-icon",
      "path": "./..\\titanium-icon\\src\\titanium-icon.ts",
      "description": "Titanium icon - encapsulates icon text in shadow DOM to prevent icon name from showing as selected text when used in an mwc-select/mwc-list item",
      "attributes": [
        {
          "name": "icon",
          "description": "Icon that will be displayed. Select from the list of Google material icons.",
          "type": "string",
          "default": "\"\""
        }
      ],
      "properties": [
        {
          "name": "icon",
          "attribute": "icon",
          "description": "Icon that will be displayed. Select from the list of Google material icons.",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "styles",
          "type": "CSSResult",
          "default": "\"styles\""
        },
        {
          "name": "render",
          "type": "() => TemplateResult<1>",
          "default": "\"() => html`${this.icon}`\""
        }
      ]
    },
    {
      "name": "image-cropper-dialog",
      "path": "./..\\titanium-image-input\\src\\image-cropper-dialog.ts",
      "attributes": [
        {
          "name": "options",
          "type": "TitaniumImageInputOptions",
          "default": "{\"aspectRatio\":1}"
        },
        {
          "name": "file",
          "type": "File | null"
        },
        {
          "name": "fileName",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "previewDataUrl",
          "type": "string | null"
        }
      ],
      "properties": [
        {
          "name": "dialog",
          "type": "TitaniumDialogBaseElement"
        },
        {
          "name": "img",
          "type": "HTMLImageElement"
        },
        {
          "name": "options",
          "attribute": "options",
          "type": "TitaniumImageInputOptions",
          "default": "{\"aspectRatio\":1}"
        },
        {
          "name": "file",
          "attribute": "file",
          "type": "File | null"
        },
        {
          "name": "fileName",
          "attribute": "fileName",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "previewDataUrl",
          "attribute": "previewDataUrl",
          "type": "string | null"
        },
        {
          "name": "styles",
          "type": "CSSResult[]",
          "default": "[\"h1\",\"cropperCSS\",null]"
        },
        {
          "name": "blobToFile",
          "type": "(blob: Blob, fileName: string) => File",
          "default": "\"(blob: Blob, fileName: string): File => {\\r\\n    const file = blob as Blob & { lastModified: Date; name: string };\\r\\n    file.lastModified = new Date();\\r\\n    file.name = fileName;\\r\\n    return blob as File;\\r\\n  }\""
        }
      ]
    },
    {
      "name": "titanium-image-input",
      "path": "./..\\titanium-image-input\\src\\titanium-image-input.ts",
      "description": "Material outline image input with cropper",
      "attributes": [
        {
          "name": "required",
          "description": "Displays error state if no image is empty and input is blurred.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "disabled",
          "description": "Whether or not the input should be disabled.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "label",
          "description": "Sets floating label value.",
          "type": "string",
          "default": "\"Image\""
        },
        {
          "name": "placeholder",
          "description": "Sets placeholder text value.",
          "type": "string",
          "default": "\"Select a file\""
        },
        {
          "name": "validationMessage",
          "description": "Message to show in the error color when the element is invalid.",
          "type": "string | null"
        },
        {
          "name": "options",
          "description": "Configurable CropperJs options.",
          "type": "TitaniumImageInputOptions",
          "default": "{\"aspectRatio\":1}"
        }
      ],
      "properties": [
        {
          "name": "required",
          "attribute": "required",
          "description": "Displays error state if no image is empty and input is blurred.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "disabled",
          "attribute": "disabled",
          "description": "Whether or not the input should be disabled.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "label",
          "attribute": "label",
          "description": "Sets floating label value.",
          "type": "string",
          "default": "\"Image\""
        },
        {
          "name": "placeholder",
          "attribute": "placeholder",
          "description": "Sets placeholder text value.",
          "type": "string",
          "default": "\"Select a file\""
        },
        {
          "name": "validationMessage",
          "attribute": "validationMessage",
          "description": "Message to show in the error color when the element is invalid.",
          "type": "string | null"
        },
        {
          "name": "options",
          "attribute": "options",
          "description": "Configurable CropperJs options.",
          "type": "TitaniumImageInputOptions",
          "default": "{\"aspectRatio\":1}"
        },
        {
          "name": "styles",
          "type": "CSSResult[]",
          "default": "[null]"
        }
      ],
      "events": [
        {
          "name": "change"
        }
      ],
      "cssProperties": [
        {
          "name": "--app-border-color",
          "description": "Border color.",
          "type": "Color"
        },
        {
          "name": "--app-primary-color",
          "description": "Focused border color.",
          "type": "Color"
        },
        {
          "name": "--titanium-input-error-color",
          "description": "Error color, text and outline.",
          "type": "Color"
        },
        {
          "name": "--titanium-input-placeholder-color",
          "description": "Color of icon button and placeholder text.",
          "type": "Color"
        }
      ]
    },
    {
      "name": "titanium-input-validator",
      "path": "./..\\titanium-input-validator\\src\\titanium-input-validator.ts",
      "description": "Input validator to make components use validation consistent with mwc-components.",
      "attributes": [
        {
          "name": "validationMessage",
          "description": "Validation message displayed when the input is invalid",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "evaluator",
          "description": "Evaluator function that will be called to determine if the input is valid",
          "type": "() => boolean",
          "default": "\"() => true\""
        }
      ],
      "properties": [
        {
          "name": "validationMessage",
          "attribute": "validationMessage",
          "description": "Validation message displayed when the input is invalid",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "evaluator",
          "attribute": "evaluator",
          "description": "Evaluator function that will be called to determine if the input is valid",
          "type": "() => boolean",
          "default": "\"() => true\""
        },
        {
          "name": "styles",
          "type": "CSSResult",
          "default": "\"css`\\r\\n    :host {\\r\\n      display: inline-flex;\\r\\n      flex-direction: column;\\r\\n    }\\r\\n\\r\\n    error-message {\\r\\n      color: var(--mdc-theme-error, #b00020);\\r\\n      letter-spacing: 0.0333333em;\\r\\n      font-size: 12px;\\r\\n      height: 19px;\\r\\n      padding: 0 16px;\\r\\n      opacity: 0.99;\\r\\n      -webkit-font-smoothing: antialiased;\\r\\n    }\\r\\n  `\""
        },
        {
          "name": "render",
          "type": "() => TemplateResult<1>",
          "default": "\"() => html`<slot></slot>\\r\\n    <error-message>${this.isUiValid ? '' : this.validationMessage}</error-message> `\""
        }
      ],
      "slots": [
        {
          "name": "",
          "description": "any element - The slotted element should fire the NotifyUserInputEvent when it is ready to be validated"
        }
      ],
      "cssProperties": [
        {
          "name": "--mdc-theme-error",
          "description": "error color used for validation message",
          "type": "Color"
        }
      ]
    },
    {
      "name": "titanium-full-page-loading-indicator",
      "path": "./..\\titanium-loading-indicator\\src\\titanium-full-page-loading-indicator.ts",
      "description": "A simple full-screen veil with loading indicator.",
      "properties": [
        {
          "name": "styles",
          "type": "CSSResult",
          "default": "\"css`\\r\\n    :host {\\r\\n      display: none;\\r\\n      position: relative;\\r\\n      position: fixed;\\r\\n      z-index: 19;\\r\\n      top: 0;\\r\\n      left: 0;\\r\\n      width: 100%;\\r\\n      height: 100%;\\r\\n      background-color: #eee;\\r\\n      opacity: 0;\\r\\n      -webkit-transition: opacity 75ms linear;\\r\\n      -o-transition: opacity 75ms linear;\\r\\n      transition: opacity 75ms linear;\\r\\n    }\\r\\n\\r\\n    :host([opening]),\\r\\n    :host([closing]),\\r\\n    :host([opened]) {\\r\\n      display: block;\\r\\n      z-index: 7;\\r\\n    }\\r\\n\\r\\n    :host([opening]) {\\r\\n      -webkit-transition: opacity 50ms linear;\\r\\n      -o-transition: opacity 50ms linear;\\r\\n      transition: opacity 50ms linear;\\r\\n    }\\r\\n\\r\\n    :host([closing]) {\\r\\n      -webkit-transition: opacity 150ms linear;\\r\\n      -o-transition: opacity 150ms linear;\\r\\n      transition: opacity 150ms linear;\\r\\n    }\\r\\n\\r\\n    :host([opened]) {\\r\\n      opacity: 0.6;\\r\\n    }\\r\\n\\r\\n    titanium-progress {\\r\\n      position: absolute;\\r\\n      top: 0;\\r\\n      right: 0;\\r\\n      left: 0;\\r\\n    }\\r\\n  `\""
        }
      ]
    },
    {
      "name": "titanium-loading-indicator",
      "path": "./..\\titanium-loading-indicator\\src\\titanium-loading-indicator.ts",
      "description": "A simple loading indicator.",
      "attributes": [
        {
          "name": "path",
          "description": "SVG path attribute",
          "type": "string",
          "default": "\"M15.95 10.78c.03-.25.05-.51.05-.78s-.02-.53-.06-.78l1.69-1.32c.15-.12.19-.34.1-.51l-1.6-2.77c-.1-.18-.31-.24-.49-.18l-1.99.8c-.42-.32-.86-.58-1.35-.78L12 2.34c-.03-.2-.2-.34-.4-.34H8.4c-.2 0-.36.14-.39.34l-.3 2.12c-.49.2-.94.47-1.35.78l-1.99-.8c-.18-.07-.39 0-.49.18l-1.6 2.77c-.1.18-.06.39.1.51l1.69 1.32c-.04.25-.07.52-.07.78s.02.53.06.78L2.37 12.1c-.15.12-.19.34-.1.51l1.6 2.77c.1.18.31.24.49.18l1.99-.8c.42.32.86.58 1.35.78l.3 2.12c.04.2.2.34.4.34h3.2c.2 0 .37-.14.39-.34l.3-2.12c.49-.2.94-.47 1.35-.78l1.99.8c.18.07.39 0 .49-.18l1.6-2.77c.1-.18.06-.39-.1-.51l-1.67-1.32zM10 13c-1.65 0-3-1.35-3-3s1.35-3 3-3 3 1.35 3 3-1.35 3-3 3z\""
        },
        {
          "name": "disabled",
          "description": "Disables element",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "viewBox",
          "description": "SVG viewbox attribute",
          "type": "string",
          "default": "\"0 0 20 20\""
        }
      ],
      "properties": [
        {
          "name": "path",
          "attribute": "path",
          "description": "SVG path attribute",
          "type": "string",
          "default": "\"M15.95 10.78c.03-.25.05-.51.05-.78s-.02-.53-.06-.78l1.69-1.32c.15-.12.19-.34.1-.51l-1.6-2.77c-.1-.18-.31-.24-.49-.18l-1.99.8c-.42-.32-.86-.58-1.35-.78L12 2.34c-.03-.2-.2-.34-.4-.34H8.4c-.2 0-.36.14-.39.34l-.3 2.12c-.49.2-.94.47-1.35.78l-1.99-.8c-.18-.07-.39 0-.49.18l-1.6 2.77c-.1.18-.06.39.1.51l1.69 1.32c-.04.25-.07.52-.07.78s.02.53.06.78L2.37 12.1c-.15.12-.19.34-.1.51l1.6 2.77c.1.18.31.24.49.18l1.99-.8c.42.32.86.58 1.35.78l.3 2.12c.04.2.2.34.4.34h3.2c.2 0 .37-.14.39-.34l.3-2.12c.49-.2.94-.47 1.35-.78l1.99.8c.18.07.39 0 .49-.18l1.6-2.77c.1-.18.06-.39-.1-.51l-1.67-1.32zM10 13c-1.65 0-3-1.35-3-3s1.35-3 3-3 3 1.35 3 3-1.35 3-3 3z\""
        },
        {
          "name": "disabled",
          "attribute": "disabled",
          "description": "Disables element",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "viewBox",
          "attribute": "viewBox",
          "description": "SVG viewbox attribute",
          "type": "string",
          "default": "\"0 0 20 20\""
        },
        {
          "name": "styles",
          "type": "CSSResult",
          "default": "\"css`\\r\\n    :host {\\r\\n      display: flex;\\r\\n      flex-direction: row;\\r\\n      align-items: center;\\r\\n    }\\r\\n\\r\\n    :host([hidden]) {\\r\\n      display: none;\\r\\n    }\\r\\n\\r\\n    text-container {\\r\\n      display: block;\\r\\n      padding-left: 8px;\\r\\n      font-family: 'Roboto', 'Noto', sans-serif;\\r\\n      -webkit-font-smoothing: antialiased;\\r\\n      font-size: 14px;\\r\\n      color: var(--app-text-color, #5f6368);\\r\\n    }\\r\\n\\r\\n    svg {\\r\\n      display: block;\\r\\n      width: 24px;\\r\\n      height: 24px;\\r\\n      fill: var(--app-text-color, #5f6368);\\r\\n    }\\r\\n\\r\\n    :host(:not([disabled])) svg {\\r\\n      -animation: spin 2s infinite linear;\\r\\n      -webkit-animation: spin 2s infinite linear;\\r\\n      -ms-animation: spin 2s infinite linear;\\r\\n      -moz-animation: spin 2s infinite linear;\\r\\n    }\\r\\n\\r\\n    @-ms-keyframes spin {\\r\\n      from {\\r\\n        -ms-transform: rotate(0deg);\\r\\n      }\\r\\n      to {\\r\\n        -ms-transform: rotate(360deg);\\r\\n      }\\r\\n    }\\r\\n\\r\\n    @-moz-keyframes spin {\\r\\n      from {\\r\\n        -moz-transform: rotate(0deg);\\r\\n      }\\r\\n      to {\\r\\n        -moz-transform: rotate(360deg);\\r\\n      }\\r\\n    }\\r\\n\\r\\n    @-webkit-keyframes spin {\\r\\n      from {\\r\\n        -webkit-transform: rotate(0deg);\\r\\n      }\\r\\n      to {\\r\\n        -webkit-transform: rotate(360deg);\\r\\n      }\\r\\n    }\\r\\n\\r\\n    @keyframes spin {\\r\\n      from {\\r\\n        transform: rotate(0deg);\\r\\n      }\\r\\n      to {\\r\\n        transform: rotate(360deg);\\r\\n      }\\r\\n    }\\r\\n  `\""
        }
      ],
      "slots": [
        {
          "name": "",
          "description": "Overwrites the default \"Loading...\" text"
        }
      ],
      "cssProperties": [
        {
          "name": "--app-text-color",
          "description": "Loading text and icon color",
          "type": "Color"
        }
      ]
    },
    {
      "name": "titanium-offline-notice",
      "path": "./..\\titanium-offline-notice\\src\\titanium-offline-notice.ts",
      "attributes": [
        {
          "name": "isOnline",
          "type": "boolean",
          "default": "true"
        }
      ],
      "properties": [
        {
          "name": "isOnline",
          "attribute": "isOnline",
          "type": "boolean",
          "default": "true"
        },
        {
          "name": "styles",
          "type": "CSSResult",
          "default": "\"css`\\r\\n    :host {\\r\\n      display: flex;\\r\\n      flex-direction: column;\\r\\n      position: fixed;\\r\\n      top: var(--titanium-offline-notice-top-offset, 48px);\\r\\n      left: 0;\\r\\n      right: 0;\\r\\n      background-color: var(--titanium-offline-notice-background-color, #ef5350);\\r\\n      height: var(--titanium-offline-notice-height, 48px);\\r\\n      padding: 0 8px;\\r\\n    }\\r\\n\\r\\n    :host([isonline]) {\\r\\n      display: none;\\r\\n    }\\r\\n\\r\\n    notice-container {\\r\\n      display: flex;\\r\\n      flex-direction: row;\\r\\n      font-size: 14px;\\r\\n      line-height: 18px;\\r\\n      color: #ffffff;\\r\\n    }\\r\\n\\r\\n    notice-text {\\r\\n      display: flex;\\r\\n      flex-direction: column;\\r\\n      margin: 8px 8px 8px 4px;\\r\\n      overflow: hidden;\\r\\n    }\\r\\n\\r\\n    [secondary] {\\r\\n      font-size: 12px;\\r\\n      line-height: 14px;\\r\\n      opacity: 0.6;\\r\\n    }\\r\\n\\r\\n    notice-container svg {\\r\\n      margin: 12px 4px 12px 0;\\r\\n      width: 24px;\\r\\n      height: 24px;\\r\\n      vertical-align: top;\\r\\n      fill: #fff;\\r\\n    }\\r\\n\\r\\n    limit-width {\\r\\n      display: flex;\\r\\n      flex-direction: column;\\r\\n      align-self: center;\\r\\n      max-width: var(--titanium-offline-notice-max-content-width, inherit);\\r\\n      width: 100%;\\r\\n      overflow: hidden;\\r\\n    }\\r\\n\\r\\n    [hidden] {\\r\\n      display: none;\\r\\n    }\\r\\n  `\""
        }
      ],
      "events": [
        {
          "name": "is-online-changed"
        }
      ]
    },
    {
      "name": "titanium-menu-surface",
      "path": "./..\\titanium-popup-surface\\src\\titanium-menu-surface.ts",
      "attributes": [
        {
          "name": "anchorElement",
          "type": "Element | null"
        },
        {
          "name": "anchor-margin-bottom",
          "description": "Anchors margin from bottom",
          "type": "number",
          "default": "0"
        },
        {
          "name": "anchor-margin-top",
          "description": "Anchors margin from top",
          "type": "number",
          "default": "0"
        },
        {
          "name": "anchor-margin-right",
          "description": "Anchors margin from right",
          "type": "number",
          "default": "0"
        },
        {
          "name": "anchor-margin-left",
          "description": "Anchors margin from left",
          "type": "number",
          "default": "0"
        },
        {
          "name": "anchor-corner",
          "description": "Defines the corner the surface is anchored to\r\nTOP_LEFT = 0\r\nTOP_RIGHT = 4\r\nBOTTOM_LEFT = 1\r\nBOTTOM_RIGHT = 5\r\nTOP_START = 8\r\nTOP_END = 12\r\nBOTTOM_START = 9\r\nBOTTOM_END = 13",
          "type": "Corner",
          "default": "8"
        },
        {
          "name": "quick-open",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "hoisted-element",
          "description": "Used to indicate if the menu-surface is hoisted to the body.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "fixed-position",
          "description": "Used to set the menu-surface calculations based on a fixed position menu.",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "mainSlot",
          "type": "HTMLSlotElement"
        },
        {
          "name": "list",
          "type": "HTMLElement"
        },
        {
          "name": "anchorElement",
          "attribute": "anchorElement",
          "type": "Element | null"
        },
        {
          "name": "anchorMarginBottom",
          "attribute": "anchor-margin-bottom",
          "description": "Anchors margin from bottom",
          "type": "number",
          "default": "0"
        },
        {
          "name": "anchorMarginTop",
          "attribute": "anchor-margin-top",
          "description": "Anchors margin from top",
          "type": "number",
          "default": "0"
        },
        {
          "name": "anchorMarginRight",
          "attribute": "anchor-margin-right",
          "description": "Anchors margin from right",
          "type": "number",
          "default": "0"
        },
        {
          "name": "anchorMarginLeft",
          "attribute": "anchor-margin-left",
          "description": "Anchors margin from left",
          "type": "number",
          "default": "0"
        },
        {
          "name": "anchorCorner",
          "attribute": "anchor-corner",
          "description": "Defines the corner the surface is anchored to\r\nTOP_LEFT = 0\r\nTOP_RIGHT = 4\r\nBOTTOM_LEFT = 1\r\nBOTTOM_RIGHT = 5\r\nTOP_START = 8\r\nTOP_END = 12\r\nBOTTOM_START = 9\r\nBOTTOM_END = 13",
          "type": "Corner",
          "default": "8"
        },
        {
          "name": "isQuickOpen",
          "attribute": "quick-open",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "isHoistedElement",
          "attribute": "hoisted-element",
          "description": "Used to indicate if the menu-surface is hoisted to the body.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "isFixedPosition",
          "attribute": "fixed-position",
          "description": "Used to set the menu-surface calculations based on a fixed position menu.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "styles",
          "type": "CSSResult[]",
          "default": "[null,null]"
        }
      ],
      "events": [
        {
          "name": "item-selected"
        },
        {
          "name": "opened-changed"
        }
      ]
    },
    {
      "name": "titanium-progress",
      "path": "./..\\titanium-progress\\src\\titanium-progress.ts",
      "description": "A simple progress indicator bar.",
      "attributes": [
        {
          "name": "disabled",
          "description": "Whether or not the progress should be disabled.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "hidden",
          "description": "Whether or not the progress should be hidden.",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "disabled",
          "attribute": "disabled",
          "description": "Whether or not the progress should be disabled.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "hidden",
          "attribute": "hidden",
          "description": "Whether or not the progress should be hidden.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "styles",
          "type": "CSSResult",
          "default": "\"css`\\r\\n    :host {\\r\\n      display: block;\\r\\n      position: relative;\\r\\n      height: 5px;\\r\\n      overflow-x: hidden;\\r\\n    }\\r\\n\\r\\n    :host([hidden]) {\\r\\n      display: none;\\r\\n    }\\r\\n\\r\\n    .line {\\r\\n      position: absolute;\\r\\n      opacity: 0.4;\\r\\n      background: var(--app-primary-color, #3b95ff);\\r\\n      width: 150%;\\r\\n      height: 5px;\\r\\n    }\\r\\n\\r\\n    .subline {\\r\\n      position: absolute;\\r\\n      background: var(--app-primary-color, #3b95ff);\\r\\n      height: 5px;\\r\\n    }\\r\\n\\r\\n    .inc {\\r\\n      animation: increase 3s infinite;\\r\\n    }\\r\\n\\r\\n    .dec {\\r\\n      animation: decrease 3s 0.5s infinite;\\r\\n    }\\r\\n\\r\\n    :host([disabled]) .inc,\\r\\n    :host([disabled]) .dec,\\r\\n    :host([hidden]) .inc,\\r\\n    :host([hidden]) .dec {\\r\\n      -webkit-animation-play-state: paused;\\r\\n      animation-play-state: paused;\\r\\n    }\\r\\n\\r\\n    :host([reverse]) .inc {\\r\\n      animation: increase-right 1s infinite;\\r\\n    }\\r\\n\\r\\n    :host([reverse]) .dec {\\r\\n      animation: decrease-right 1s 0.5s infinite;\\r\\n    }\\r\\n\\r\\n    @keyframes increase-right {\\r\\n      from {\\r\\n        right: -5%;\\r\\n        width: 5%;\\r\\n      }\\r\\n\\r\\n      to {\\r\\n        right: 130%;\\r\\n        width: 100%;\\r\\n      }\\r\\n    }\\r\\n\\r\\n    @keyframes increase {\\r\\n      from {\\r\\n        left: -5%;\\r\\n        width: 5%;\\r\\n      }\\r\\n\\r\\n      to {\\r\\n        left: 130%;\\r\\n        width: 100%;\\r\\n      }\\r\\n    }\\r\\n\\r\\n    @keyframes decrease {\\r\\n      from {\\r\\n        left: -80%;\\r\\n        width: 80%;\\r\\n      }\\r\\n\\r\\n      to {\\r\\n        left: 110%;\\r\\n        width: 10%;\\r\\n      }\\r\\n    }\\r\\n\\r\\n    @keyframes decrease-right {\\r\\n      from {\\r\\n        right: -80%;\\r\\n        width: 80%;\\r\\n      }\\r\\n\\r\\n      to {\\r\\n        right: 110%;\\r\\n        width: 10%;\\r\\n      }\\r\\n    }\\r\\n  `\""
        }
      ],
      "cssProperties": [
        {
          "name": "--app-primary-color",
          "description": "Progress bar color",
          "type": "Color"
        }
      ]
    },
    {
      "name": "titanium-search-input",
      "path": "./..\\titanium-search-input\\src\\titanium-search-input.ts",
      "description": "A styled input with built-in search and clear icons. .",
      "attributes": [
        {
          "name": "value",
          "description": "Gets and sets input value.",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "placeholder",
          "description": "Sets input placeholder text.",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "hide-clear-button",
          "description": "Whether or not the input should hide the clear button",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "disabled",
          "description": "Whether or not the input should be disabled.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "prevent-collapse",
          "description": "Whether the input should prevent collapse.",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "value",
          "attribute": "value",
          "description": "Gets and sets input value.",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "placeholder",
          "attribute": "placeholder",
          "description": "Sets input placeholder text.",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "hideClearButton",
          "attribute": "hide-clear-button",
          "description": "Whether or not the input should hide the clear button",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "disabled",
          "attribute": "disabled",
          "description": "Whether or not the input should be disabled.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "preventCollapse",
          "attribute": "prevent-collapse",
          "description": "Whether the input should prevent collapse.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "styles",
          "type": "CSSResult",
          "default": "\"css`\\r\\n    :host {\\r\\n      display: flex;\\r\\n      flex-direction: column;\\r\\n      height: 42px;\\r\\n      -webkit-transition: width 250ms 0ms cubic-bezier(0.4, 0, 0.2, 1); /* Safari */\\r\\n      transition: width 250ms 0ms cubic-bezier(0.4, 0, 0.2, 1);\\r\\n      width: 250px;\\r\\n      --mdc-icon-button-size: 42px;\\r\\n    }\\r\\n\\r\\n    input-container {\\r\\n      display: flex;\\r\\n      flex-direction: row;\\r\\n      position: relative;\\r\\n    }\\r\\n\\r\\n    mwc-icon-button {\\r\\n      position: absolute;\\r\\n      color: var(--app-text-color, #5f6368);\\r\\n      top: 0;\\r\\n    }\\r\\n\\r\\n    mwc-icon-button[clear] {\\r\\n      right: 0;\\r\\n    }\\r\\n\\r\\n    mwc-icon-button[search] {\\r\\n      left: 0;\\r\\n    }\\r\\n\\r\\n    :host([disabled]) svg {\\r\\n      cursor: not-allowed;\\r\\n    }\\r\\n\\r\\n    input-container input {\\r\\n      -webkit-appearance: none;\\r\\n      width: 100%;\\r\\n      height: 42px;\\r\\n      -webkit-font-smoothing: antialiased;\\r\\n      -moz-osx-font-smoothing: grayscale;\\r\\n      padding: 0;\\r\\n      margin: 0;\\r\\n      padding-left: 46px !important;\\r\\n      padding-right: 46px !important;\\r\\n      transition: background 100ms ease-in, width 100ms ease-out;\\r\\n      color: var(--app-text-color, #5f6368);\\r\\n      background-color: #fff;\\r\\n      border-top-left-radius: 20px;\\r\\n      border-top-right-radius: 20px;\\r\\n      border-bottom-left-radius: 20px;\\r\\n      border-bottom-right-radius: 20px;\\r\\n      border: 1px solid var(--app-border-color, #dadce0);\\r\\n    }\\r\\n\\r\\n    :host([shallow]) input-container input {\\r\\n      border-top-left-radius: 12px;\\r\\n      border-top-right-radius: 12px;\\r\\n      border-bottom-left-radius: 12px;\\r\\n      border-bottom-right-radius: 12px;\\r\\n    }\\r\\n\\r\\n    input-container:hover input {\\r\\n      box-shadow: 0 1px 6px 0 rgba(32, 33, 36, 0.28);\\r\\n    }\\r\\n\\r\\n    input-container input::-ms-clear {\\r\\n      display: none;\\r\\n    }\\r\\n\\r\\n    :host([collapsed]:not([prevent-collapse])) {\\r\\n      overflow: hidden;\\r\\n      width: 42px;\\r\\n    }\\r\\n\\r\\n    :host([collapsed]:not([prevent-collapse])) input-container input {\\r\\n      opacity: 0;\\r\\n      pointer-events: none;\\r\\n    }\\r\\n\\r\\n    :host([disabled]) input-container input {\\r\\n      background-color: #fafafa;\\r\\n      cursor: not-allowed;\\r\\n      opacity: 0.6;\\r\\n    }\\r\\n\\r\\n    :host([disabled]) input-container:hover input {\\r\\n      box-shadow: none;\\r\\n    }\\r\\n\\r\\n    input-container input,\\r\\n    input-container input:focus {\\r\\n      box-sizing: border-box;\\r\\n      outline: none;\\r\\n      font-size: 16px;\\r\\n      font-weight: 400;\\r\\n    }\\r\\n\\r\\n    input-container input:focus {\\r\\n      color: var(--app-dark-text-color, #202124);\\r\\n    }\\r\\n\\r\\n    [hidden] {\\r\\n      display: none;\\r\\n    }\\r\\n  `\""
        }
      ],
      "events": [
        {
          "name": "value-changed",
          "description": "Fired when selection changes. details contains the selected item <T> or null."
        }
      ],
      "cssProperties": [
        {
          "name": "--app-text-color",
          "description": "Not active text color",
          "type": "Color"
        },
        {
          "name": "--app-dark-text-color",
          "description": "Focuses text color",
          "type": "Color"
        },
        {
          "name": "--app-border-color",
          "description": "Input border color",
          "type": "Color"
        }
      ]
    },
    {
      "name": "titanium-select",
      "path": "./..\\titanium-select\\src\\titanium-select.ts",
      "attributes": [
        {
          "name": "options",
          "description": "List of object that are the options for the select.  At a minium the object should have a name and unique id property.",
          "type": "T[]",
          "default": "[]"
        },
        {
          "name": "value",
          "description": "Currently selected object",
          "type": "T | null"
        },
        {
          "name": "label",
          "description": "Sets floating label value.",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "disabled",
          "description": "Whether or not the input should be disabled.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "required",
          "description": "Displays error state if value is empty and input is blurred.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "validationMessage",
          "description": "Message to show in the error color when the textfield is invalid. (Helper text will not be visible)",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "helper",
          "description": "Helper text to display below the input. Display default only when focused.",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "helperPersistent",
          "description": "Always show the helper text despite focus.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "fullwidth",
          "description": "Whether or not to make the input fullwidth. No longer displays label; only placeholder and helper.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "itemLabelPath",
          "description": "Property name in the options object where the display name is stored.",
          "type": "string",
          "default": "\"Name\""
        },
        {
          "name": "itemIdentifierPath",
          "description": "Property name in the options object where the unique option Id is stored.",
          "type": "string",
          "default": "\"Id\""
        }
      ],
      "properties": [
        {
          "name": "options",
          "attribute": "options",
          "description": "List of object that are the options for the select.  At a minium the object should have a name and unique id property.",
          "type": "T[]",
          "default": "[]"
        },
        {
          "name": "value",
          "attribute": "value",
          "description": "Currently selected object",
          "type": "T | null"
        },
        {
          "name": "label",
          "attribute": "label",
          "description": "Sets floating label value.",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "disabled",
          "attribute": "disabled",
          "description": "Whether or not the input should be disabled.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "required",
          "attribute": "required",
          "description": "Displays error state if value is empty and input is blurred.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "validationMessage",
          "attribute": "validationMessage",
          "description": "Message to show in the error color when the textfield is invalid. (Helper text will not be visible)",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "helper",
          "attribute": "helper",
          "description": "Helper text to display below the input. Display default only when focused.",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "helperPersistent",
          "attribute": "helperPersistent",
          "description": "Always show the helper text despite focus.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "fullwidth",
          "attribute": "fullwidth",
          "description": "Whether or not to make the input fullwidth. No longer displays label; only placeholder and helper.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "itemLabelPath",
          "attribute": "itemLabelPath",
          "description": "Property name in the options object where the display name is stored.",
          "type": "string",
          "default": "\"Name\""
        },
        {
          "name": "itemIdentifierPath",
          "attribute": "itemIdentifierPath",
          "description": "Property name in the options object where the unique option Id is stored.",
          "type": "string",
          "default": "\"Id\""
        },
        {
          "name": "styles",
          "type": "CSSResult",
          "default": "\"css`\\r\\n    :host {\\r\\n      display: inline-flex;\\r\\n      outline: none;\\r\\n      position: relative;\\r\\n    }\\r\\n\\r\\n    mwc-textfield {\\r\\n      position: relative;\\r\\n      width: 100%;\\r\\n      pointer-events: none;\\r\\n    }\\r\\n\\r\\n    mwc-textfield[focused] {\\r\\n      --mdc-text-field-outlined-idle-border-color: var(--app-secondary-color, #4285f4);\\r\\n      --mdc-notched-outline-stroke-width: 2px;\\r\\n      --mdc-text-field-label-ink-color: var(--app-secondary-color, #4285f4);\\r\\n    }\\r\\n\\r\\n    select {\\r\\n      position: absolute;\\r\\n      z-index: 2;\\r\\n      top: 0;\\r\\n      left: 0;\\r\\n      width: 100%;\\r\\n      height: 56px;\\r\\n      cursor: pointer;\\r\\n      border: none;\\r\\n      padding: 0;\\r\\n      background-color: transparent;\\r\\n      color: var(--app-text-color, #5f6368);\\r\\n      font-size: 16px;\\r\\n      font-weight: 400;\\r\\n      font-family: Roboto, Noto, sans-serif;\\r\\n      -webkit-font-smoothing: antialiased;\\r\\n      -webkit-appearance: none;\\r\\n      opacity: 0;\\r\\n    }\\r\\n\\r\\n    select::-ms-expand {\\r\\n      display: none;\\r\\n    }\\r\\n\\r\\n    select:focus {\\r\\n      outline: none;\\r\\n    }\\r\\n\\r\\n    select:hover + mwc-textfield:not([focused]) {\\r\\n      --mdc-text-field-outlined-idle-border-color: var(--mdc-text-field-outlined-hover-border-color);\\r\\n    }\\r\\n  `\""
        }
      ],
      "events": [
        {
          "name": "value-changed"
        }
      ]
    },
    {
      "name": "titanium-shadow-text",
      "path": "./..\\titanium-shadow-text\\src\\titanium-shadow-text.ts",
      "description": "Titanium Shadow Text - encapsulates text in shadow DOM to prevent text from showing as selected text when used in an mwc-select/mwc-list item",
      "attributes": [
        {
          "name": "text",
          "type": "string | null | undefined",
          "default": "\"\""
        }
      ],
      "properties": [
        {
          "name": "text",
          "attribute": "text",
          "type": "string | null | undefined",
          "default": "\"\""
        },
        {
          "name": "styles",
          "type": "CSSResult",
          "default": "\"css`\\r\\n    :host {\\r\\n      display: inline;\\r\\n    }\\r\\n  `\""
        },
        {
          "name": "render",
          "type": "() => TemplateResult<1>",
          "default": "\"() => html`${this.text}`\""
        }
      ]
    },
    {
      "name": "titanium-side-menu-item",
      "path": "./..\\titanium-side-menu\\src\\titanium-side-menu-item.ts",
      "description": "Material design inspired website side menu",
      "attributes": [
        {
          "name": "selected",
          "description": "True when item is selected",
          "type": "boolean"
        },
        {
          "name": "disabled",
          "description": "Disables the button",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "href",
          "description": "The URL that the item points to",
          "type": "string"
        },
        {
          "name": "target",
          "description": "The URL target",
          "type": "\"_blank\" | \"_parent\" | \"_self\" | \"_top\""
        }
      ],
      "properties": [
        {
          "name": "selected",
          "attribute": "selected",
          "description": "True when item is selected",
          "type": "boolean"
        },
        {
          "name": "disabled",
          "attribute": "disabled",
          "description": "Disables the button",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "href",
          "attribute": "href",
          "description": "The URL that the item points to",
          "type": "string"
        },
        {
          "name": "target",
          "attribute": "target",
          "description": "The URL target",
          "type": "\"_blank\" | \"_parent\" | \"_self\" | \"_top\""
        },
        {
          "name": "styles",
          "type": "CSSResult",
          "default": "\"css`\\r\\n    a {\\r\\n      display: flex;\\r\\n      flex-direction: row;\\r\\n      align-items: center;\\r\\n      font-family: Metropolis, Roboto, Noto, sans-serif;\\r\\n      -webkit-font-smoothing: antialiased;\\r\\n      letter-spacing: 0.35px;\\r\\n      padding: 10px 16px 10px 24px;\\r\\n      border-radius: 0 50px 50px 0;\\r\\n      font-size: 13px;\\r\\n      font-weight: 500;\\r\\n      text-decoration: none;\\r\\n      color: var(--app-menu-text-color, #3c4043);\\r\\n      fill: var(--app-menu-text-color, #3c4043);\\r\\n      transition: background 75ms;\\r\\n    }\\r\\n\\r\\n    a:hover {\\r\\n      background-color: var(--app-hover-color, #f9f9f9);\\r\\n    }\\r\\n\\r\\n    a ::slotted(svg) {\\r\\n      margin-right: 16px;\\r\\n      height: 24px;\\r\\n      width: 24px;\\r\\n    }\\r\\n\\r\\n    a ::slotted(mwc-icon) {\\r\\n      margin-right: 16px;\\r\\n      --mdc-icon-size: 24px;\\r\\n    }\\r\\n\\r\\n    a ::slotted(mwc-icon[ext]) {\\r\\n      --mdc-icon-size: 18px;\\r\\n      color: var(--app-light-text-color, #80868b);\\r\\n      margin-right: 0;\\r\\n    }\\r\\n\\r\\n    a ::slotted(span) {\\r\\n      flex: 1 1 auto;\\r\\n    }\\r\\n\\r\\n    a:active,\\r\\n    a:focus {\\r\\n      outline: none;\\r\\n      background-color: var(--app-hover-color, #f9f9f9);\\r\\n    }\\r\\n\\r\\n    a::-moz-focus-inner {\\r\\n      border: 0;\\r\\n    }\\r\\n\\r\\n    :host([selected]) a {\\r\\n      background: var(--titanium-side-menu-item-selected-background-color, #e8f0fe);\\r\\n      color: var(--titanium-side-menu-item-selected-color, #1967d2);\\r\\n      fill: var(--titanium-side-menu-item-selected-color, #1967d2);\\r\\n    }\\r\\n\\r\\n    :host([disabled]:not([selected])) a {\\r\\n      color: rgba(0, 0, 0, 0.37);\\r\\n      cursor: default;\\r\\n      pointer-events: none;\\r\\n    }\\r\\n  `\""
        }
      ],
      "slots": [
        {
          "name": "",
          "description": "main slot item title"
        }
      ],
      "cssProperties": [
        {
          "name": "--app-menu-text-color",
          "description": "Item text color",
          "type": "Color"
        },
        {
          "name": "--app-hover-color",
          "description": "Background hover and focus color",
          "type": "Color"
        },
        {
          "name": "--titanium-side-menu-item-selected-background-color",
          "description": "Selected item background color",
          "type": "Color"
        },
        {
          "name": "--titanium-side-menu-item-selected-color",
          "description": "Selected item text color",
          "type": "Color"
        }
      ]
    },
    {
      "name": "titanium-single-select-item",
      "path": "./..\\titanium-single-select\\src\\titanium-single-select-item.ts",
      "attributes": [
        {
          "name": "tabindex",
          "type": "number",
          "default": "0"
        }
      ],
      "properties": [
        {
          "name": "value",
          "type": "T"
        },
        {
          "name": "tabindex",
          "attribute": "tabindex",
          "type": "number",
          "default": "0"
        },
        {
          "name": "styles",
          "type": "CSSResult",
          "default": "\"css`\\r\\n    :host {\\r\\n      display: flex;\\r\\n      flex-direction: row;\\r\\n\\r\\n      position: relative;\\r\\n      padding: 0 16px;\\r\\n      cursor: default;\\r\\n      white-space: nowrap;\\r\\n      overflow: hidden;\\r\\n      text-overflow: ellipsis;\\r\\n\\r\\n      font-family: Roboto, Arial, sans-serif;\\r\\n      color: var(--app-text-color, #5f6368);\\r\\n      line-height: 26px;\\r\\n      font-size: 16px;\\r\\n    }\\r\\n\\r\\n    :host(:hover),\\r\\n    :host(:focus) {\\r\\n      background-color: var(--app-hover-color, #f9f9f9);\\r\\n      outline: none;\\r\\n    }\\r\\n  `\""
        }
      ],
      "events": [
        {
          "name": "titanium-single-select-item-keydown"
        },
        {
          "name": "titanium-single-select-item-blur"
        },
        {
          "name": "titanium-single-select-item-click"
        }
      ]
    },
    {
      "name": "titanium-single-select",
      "path": "./..\\titanium-single-select\\src\\titanium-single-select.ts",
      "description": "Material design inspired searchable single select input.",
      "attributes": [
        {
          "name": "disableFullScreen",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "disabled",
          "description": "Disables element",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "placeholder",
          "description": "Sets input placeholder text.",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "hintText",
          "description": "Displayed when the user focuses the input before typing occurs",
          "type": "string"
        },
        {
          "name": "totalCount",
          "description": "Number of total results returned in the search",
          "type": "number"
        },
        {
          "name": "itemLabelPath",
          "description": "Property name in the suggestions object where the display name is stored.",
          "type": "string",
          "default": "\"Label\""
        }
      ],
      "properties": [
        {
          "name": "disableFullScreen",
          "attribute": "disableFullScreen",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "disabled",
          "attribute": "disabled",
          "description": "Disables element",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "placeholder",
          "attribute": "placeholder",
          "description": "Sets input placeholder text.",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "hintText",
          "attribute": "hintText",
          "description": "Displayed when the user focuses the input before typing occurs",
          "type": "string"
        },
        {
          "name": "totalCount",
          "attribute": "totalCount",
          "description": "Number of total results returned in the search",
          "type": "number"
        },
        {
          "name": "itemLabelPath",
          "attribute": "itemLabelPath",
          "description": "Property name in the suggestions object where the display name is stored.",
          "type": "string",
          "default": "\"Label\""
        },
        {
          "name": "selected",
          "description": "The selected suggestion object.",
          "type": "T | null"
        },
        {
          "name": "input",
          "description": "The native input",
          "type": "HTMLInputElement"
        },
        {
          "name": "styles",
          "type": "CSSResult",
          "default": "\"css`\\r\\n    :host {\\r\\n      display: block;\\r\\n    }\\r\\n\\r\\n    input-container {\\r\\n      display: block;\\r\\n      position: relative;\\r\\n    }\\r\\n\\r\\n    input {\\r\\n      position: relative;\\r\\n      width: 100%;\\r\\n    }\\r\\n\\r\\n    ::placeholder {\\r\\n      color: #909090;\\r\\n      opacity: 1; /* Firefox */\\r\\n    }\\r\\n\\r\\n    :-ms-input-placeholder {\\r\\n      color: #909090;\\r\\n    }\\r\\n\\r\\n    ::-ms-input-placeholder {\\r\\n      color: #909090;\\r\\n    }\\r\\n\\r\\n    svg {\\r\\n      position: absolute;\\r\\n      top: 16px;\\r\\n      left: 12px;\\r\\n      fill: var(--app-text-color, #5f6368);\\r\\n      width: 25px;\\r\\n      height: 25px;\\r\\n    }\\r\\n\\r\\n    titanium-svg-button {\\r\\n      position: absolute;\\r\\n      top: 7px;\\r\\n      right: 8px;\\r\\n    }\\r\\n\\r\\n    :host([disabled]) svg {\\r\\n      opacity: 0.4;\\r\\n    }\\r\\n\\r\\n    :host(:not([open]):not([disabled])[filled]) input {\\r\\n      background-color: #f1f3f4;\\r\\n    }\\r\\n\\r\\n    :host([shaped]) input {\\r\\n      border-top-left-radius: 28px;\\r\\n      border-top-right-radius: 28px;\\r\\n      border-bottom-left-radius: 28px;\\r\\n      border-bottom-right-radius: 28px;\\r\\n    }\\r\\n\\r\\n    :host([shallow]) input {\\r\\n      border-top-left-radius: 12px;\\r\\n      border-top-right-radius: 12px;\\r\\n      border-bottom-left-radius: 12px;\\r\\n      border-bottom-right-radius: 12px;\\r\\n    }\\r\\n\\r\\n    input {\\r\\n      width: 100%;\\r\\n      height: 56px;\\r\\n      -webkit-font-smoothing: antialiased;\\r\\n      -moz-osx-font-smoothing: grayscale;\\r\\n      padding: 5px 48px;\\r\\n      transition: background 100ms ease-in, width 100ms ease-out;\\r\\n      color: var(--app-text-color, #5f6368);\\r\\n      background-color: #fff;\\r\\n      border-top-left-radius: 4px;\\r\\n      border-top-right-radius: 4px;\\r\\n      border-bottom-left-radius: 4px;\\r\\n      border-bottom-right-radius: 4px;\\r\\n      border: 1px solid var(--app-border-color, #dadce0);\\r\\n    }\\r\\n\\r\\n    :host([open]) input {\\r\\n      border-bottom-left-radius: 0;\\r\\n      border-bottom-right-radius: 0;\\r\\n      border-bottom: 1px solid transparent;\\r\\n      box-shadow: 0 1px 6px 0 rgba(32, 33, 36, 0.28);\\r\\n    }\\r\\n\\r\\n    :host(:not([disabled])) input:hover {\\r\\n      box-shadow: 0 1px 6px 0 rgba(32, 33, 36, 0.28);\\r\\n    }\\r\\n\\r\\n    input::-ms-clear {\\r\\n      display: none;\\r\\n    }\\r\\n\\r\\n    :host([has-term]) input {\\r\\n      color: #000;\\r\\n    }\\r\\n\\r\\n    input:focus {\\r\\n      background-color: #fff;\\r\\n    }\\r\\n\\r\\n    input,\\r\\n    input:focus {\\r\\n      box-sizing: border-box;\\r\\n      outline: none;\\r\\n      font-size: 16px;\\r\\n      font-weight: 400;\\r\\n    }\\r\\n\\r\\n    hr {\\r\\n      position: absolute;\\r\\n      bottom: 1px;\\r\\n      width: calc(100% - 32px);\\r\\n      border: 0;\\r\\n      border-top: 1px solid var(--app-border-color, #dadce0);\\r\\n      margin: 0 16px;\\r\\n      height: 0;\\r\\n    }\\r\\n\\r\\n    titanium-progress {\\r\\n      display: block;\\r\\n      position: absolute;\\r\\n      bottom: 1px;\\r\\n      width: calc(100% - 32px);\\r\\n      height: 1px;\\r\\n      margin: 0 16px;\\r\\n    }\\r\\n\\r\\n    :host([shaped]) search-suggestions {\\r\\n      border-bottom-left-radius: 28px;\\r\\n      border-bottom-right-radius: 28px;\\r\\n    }\\r\\n\\r\\n    :host(:not([open])) search-suggestions {\\r\\n      transform: scale(0);\\r\\n      opacity: 0;\\r\\n    }\\r\\n\\r\\n    click-trap {\\r\\n      position: fixed;\\r\\n      top: 0;\\r\\n      bottom: 0;\\r\\n      right: 0;\\r\\n      left: 0;\\r\\n      background-color: #fff;\\r\\n      opacity: 0.01;\\r\\n      z-index: 8;\\r\\n    }\\r\\n\\r\\n    search-suggestions {\\r\\n      display: flex;\\r\\n      flex-direction: column;\\r\\n      position: absolute;\\r\\n      z-index: 9;\\r\\n      min-height: 75px;\\r\\n      background-color: #fff;\\r\\n      border: 1px solid var(--app-border-color, #dadce0);\\r\\n      border-top: 0;\\r\\n      border-bottom-left-radius: 4px;\\r\\n      border-bottom-right-radius: 4px;\\r\\n      margin-top: -1px;\\r\\n      box-shadow: 0 6px 6px 0 rgba(32, 33, 36, 0.28);\\r\\n      overflow: hidden;\\r\\n      transition: opacity, transform 0.4s cubic-bezier(0.25, 0.8, 0.25, 1);\\r\\n      opacity: 1;\\r\\n      transform-origin: left top;\\r\\n      transform: scale(1);\\r\\n    }\\r\\n\\r\\n    informatory-text {\\r\\n      display: block;\\r\\n      padding: 8px 16px;\\r\\n      font-family: Roboto, Arial, sans-serif;\\r\\n      color: var(--app-light-text-color, #80868b);\\r\\n      line-height: 18px;\\r\\n      font-size: 13px;\\r\\n    }\\r\\n\\r\\n    :host([unresolved]),\\r\\n    [hidden] {\\r\\n      display: none !important;\\r\\n    }\\r\\n\\r\\n    @media (max-width: 768px) {\\r\\n      :host([open]:not([disableFullScreen])) {\\r\\n        max-width: 100% !important;\\r\\n        margin: 0 !important;\\r\\n        position: fixed;\\r\\n        z-index: 1000;\\r\\n        top: 0;\\r\\n        left: 0;\\r\\n        right: 0;\\r\\n        bottom: 0;\\r\\n        background: #fff;\\r\\n      }\\r\\n\\r\\n      :host([open]:not([disableFullScreen])) input,\\r\\n      :host([open]:not([disableFullScreen])) input:hover {\\r\\n        position: fixed;\\r\\n        top: 0;\\r\\n        left: 0;\\r\\n        border-radius: 0;\\r\\n        border: 0;\\r\\n        box-shadow: none;\\r\\n      }\\r\\n\\r\\n      :host([open]:not([disableFullScreen])) input-container {\\r\\n        height: 57px;\\r\\n        width: 100%;\\r\\n      }\\r\\n\\r\\n      :host([open]:not([disableFullScreen])) search-suggestions {\\r\\n        box-shadow: none;\\r\\n        border: none;\\r\\n        border-radius: 0;\\r\\n        transition: none;\\r\\n        overflow: auto;\\r\\n        max-height: calc(100% - 56px);\\r\\n        display: block;\\r\\n      }\\r\\n    }\\r\\n  `\""
        }
      ],
      "events": [
        {
          "name": "selected-change",
          "description": "Fired when selected item changes. Detail is the selected-item  or null."
        },
        {
          "name": "input-change",
          "description": "Fired when the text changed in the text field."
        },
        {
          "name": "input-changed"
        },
        {
          "name": "selected-changed"
        }
      ],
      "slots": [
        {
          "name": "",
          "description": "Main slot for search suggestions. Slotted elements should be titanium-single-select-items"
        }
      ],
      "cssProperties": [
        {
          "name": "--app-border-color",
          "description": "Input border color",
          "type": "Color"
        },
        {
          "name": "--app-light=text-color",
          "description": "informatory text color",
          "type": "Color"
        },
        {
          "name": "--app-text-color",
          "description": "Inputs main text color",
          "type": "Color"
        }
      ]
    },
    {
      "name": "titanium-snackbar",
      "path": "./..\\titanium-snackbar\\src\\titanium-snackbar.ts",
      "description": "Material design snackbar.",
      "properties": [
        {
          "name": "styles",
          "type": "CSSResult",
          "default": "\"css`\\r\\n    :host {\\r\\n      display: none;\\r\\n      min-width: 240px;\\r\\n      flex-direction: column;\\r\\n      font-family: Roboto, Noto, sans-serif;\\r\\n      -webkit-font-smoothing: antialiased;\\r\\n      position: fixed;\\r\\n      bottom: 0;\\r\\n      left: 0;\\r\\n      margin: 16px;\\r\\n      padding: 8px;\\r\\n      border-radius: 4px;\\r\\n      background: var(--titanium-snackbar-background-color, #323232);\\r\\n      color: var(--titanium-snackbar-text-color, #f1f1f1);\\r\\n      font-size: 14px;\\r\\n      -webkit-box-shadow: 0 3px 5px -1px rgba(0, 0, 0, 0.2), 0 6px 10px 0 rgba(0, 0, 0, 0.14), 0 1px 18px 0 rgba(0, 0, 0, 0.12);\\r\\n      box-shadow: 0 3px 5px -1px rgba(0, 0, 0, 0.2), 0 6px 10px 0 rgba(0, 0, 0, 0.14), 0 1px 18px 0 rgba(0, 0, 0, 0.12);\\r\\n\\r\\n      -webkit-box-sizing: border-box;\\r\\n      box-sizing: border-box;\\r\\n      -webkit-transform: scale(0.8);\\r\\n      -ms-transform: scale(0.8);\\r\\n      transform: scale(0.8);\\r\\n      z-index: 2;\\r\\n      opacity: 0;\\r\\n    }\\r\\n\\r\\n    :host([informational]) {\\r\\n      background-color: #43a047;\\r\\n      color: #fff;\\r\\n    }\\r\\n\\r\\n    :host([error]) {\\r\\n      background-color: #d32f2f;\\r\\n      color: #fff;\\r\\n    }\\r\\n\\r\\n    :host([opening]),\\r\\n    :host([opened]),\\r\\n    :host([closing]) {\\r\\n      display: flex;\\r\\n    }\\r\\n\\r\\n    :host([closing]) {\\r\\n      -webkit-transform: scale(1);\\r\\n      -ms-transform: scale(1);\\r\\n      transform: scale(1);\\r\\n      -webkit-transition: opacity 75ms linear;\\r\\n      -o-transition: opacity 75ms linear;\\r\\n      transition: opacity 75ms linear;\\r\\n    }\\r\\n\\r\\n    :host([opening]) {\\r\\n      -webkit-transition: opacity 75ms linear, -webkit-transform 150ms 0ms cubic-bezier(0, 0, 0.2, 1);\\r\\n      transition: opacity 75ms linear, -webkit-transform 150ms 0ms cubic-bezier(0, 0, 0.2, 1);\\r\\n      -o-transition: opacity 75ms linear, transform 150ms 0ms cubic-bezier(0, 0, 0.2, 1);\\r\\n      transition: opacity 75ms linear, transform 150ms 0ms cubic-bezier(0, 0, 0.2, 1);\\r\\n      transition: opacity 75ms linear, transform 150ms 0ms cubic-bezier(0, 0, 0.2, 1), -webkit-transform 150ms 0ms cubic-bezier(0, 0, 0.2, 1);\\r\\n    }\\r\\n\\r\\n    :host([opened]) {\\r\\n      -webkit-transform: scale(1);\\r\\n      -ms-transform: scale(1);\\r\\n      transform: scale(1);\\r\\n      opacity: 1;\\r\\n    }\\r\\n\\r\\n    http-error {\\r\\n      display: grid;\\r\\n      gap: 24px;\\r\\n      grid:\\r\\n        'action status'\\r\\n        'error error';\\r\\n    }\\r\\n\\r\\n    http-error [detail] {\\r\\n      font-size: 10px;\\r\\n      overflow-y: auto;\\r\\n      overflow-y: auto;\\r\\n      max-height: 400px;\\r\\n      grid-column: 1 / -1;\\r\\n      color: #929397;\\r\\n    }\\r\\n\\r\\n    http-error [error] {\\r\\n      grid-area: error;\\r\\n    }\\r\\n\\r\\n    http-error [status] {\\r\\n      grid-area: status;\\r\\n      font-size: 12px;\\r\\n      justify-self: end;\\r\\n      color: var(--app-light-text-color, #707175);\\r\\n    }\\r\\n\\r\\n    http-error [action] {\\r\\n      grid-area: action;\\r\\n      font-size: 12px;\\r\\n      color: var(--app-light-text-color, #707175);\\r\\n    }\\r\\n\\r\\n    span[main] {\\r\\n      max-width: 600px;\\r\\n      overflow: hidden;\\r\\n      margin: 12px;\\r\\n    }\\r\\n\\r\\n    mwc-button {\\r\\n      align-self: flex-end;\\r\\n    }\\r\\n\\r\\n    :host([error]) mwc-button,\\r\\n    :host([informational]) mwc-button {\\r\\n      --mdc-theme-primary: #fff;\\r\\n    }\\r\\n\\r\\n    [hidden] {\\r\\n      display: none !important;\\r\\n    }\\r\\n  `\""
        }
      ],
      "cssProperties": [
        {
          "name": "--titanium-snackbar-background-color",
          "description": "Snackbar background color",
          "type": "Color"
        },
        {
          "name": "--titanium-snackbar-text-color",
          "description": "Color of the text in the snackbar",
          "type": "Color"
        }
      ]
    },
    {
      "name": "titanium-svg-button-menu",
      "path": "./..\\titanium-svg-button\\src\\titanium-svg-button-menu.ts",
      "description": "Material design inspired svg button with menu.",
      "attributes": [
        {
          "name": "anchor-margin-bottom",
          "description": "Anchors margin from bottom",
          "type": "number",
          "default": "0"
        },
        {
          "name": "anchor-margin-top",
          "description": "Anchors margin from top",
          "type": "number",
          "default": "34"
        },
        {
          "name": "anchor-margin-right",
          "description": "Anchors margin from right",
          "type": "number",
          "default": "10"
        },
        {
          "name": "anchor-margin-left",
          "description": "Anchors margin from left",
          "type": "number",
          "default": "0"
        },
        {
          "name": "anchor-corner",
          "description": "Defines the corner the surface is anchored to\r\nTOP_LEFT = 0\r\nTOP_RIGHT = 4\r\nBOTTOM_LEFT = 1\r\nBOTTOM_RIGHT = 5\r\nTOP_START = 8\r\nTOP_END = 12\r\nBOTTOM_START = 9\r\nBOTTOM_END = 13",
          "type": "Corner",
          "default": "8"
        },
        {
          "name": "path",
          "description": "SVG path",
          "type": "string",
          "default": "\"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\""
        }
      ],
      "properties": [
        {
          "name": "surface",
          "type": "TitaniumMenuSurfaceElement"
        },
        {
          "name": "anchorMarginBottom",
          "attribute": "anchor-margin-bottom",
          "description": "Anchors margin from bottom",
          "type": "number",
          "default": "0"
        },
        {
          "name": "anchorMarginTop",
          "attribute": "anchor-margin-top",
          "description": "Anchors margin from top",
          "type": "number",
          "default": "34"
        },
        {
          "name": "anchorMarginRight",
          "attribute": "anchor-margin-right",
          "description": "Anchors margin from right",
          "type": "number",
          "default": "10"
        },
        {
          "name": "anchorMarginLeft",
          "attribute": "anchor-margin-left",
          "description": "Anchors margin from left",
          "type": "number",
          "default": "0"
        },
        {
          "name": "anchorCorner",
          "attribute": "anchor-corner",
          "description": "Defines the corner the surface is anchored to\r\nTOP_LEFT = 0\r\nTOP_RIGHT = 4\r\nBOTTOM_LEFT = 1\r\nBOTTOM_RIGHT = 5\r\nTOP_START = 8\r\nTOP_END = 12\r\nBOTTOM_START = 9\r\nBOTTOM_END = 13",
          "type": "Corner",
          "default": "8"
        },
        {
          "name": "path",
          "attribute": "path",
          "description": "SVG path",
          "type": "string",
          "default": "\"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\""
        },
        {
          "name": "styles",
          "type": "CSSResult",
          "default": "\"css`\\r\\n    :host {\\r\\n      display: block;\\r\\n      font-family: 'Roboto', 'Noto', sans-serif;\\r\\n    }\\r\\n\\r\\n    ::slotted(div) {\\r\\n      height: 48px;\\r\\n      font-size: 16px;\\r\\n      font-weight: 400;\\r\\n      line-height: 18px;\\r\\n      color: var(--app-text-color, #5f6368);\\r\\n      padding: 16px;\\r\\n      box-sizing: border-box;\\r\\n      white-space: nowrap;\\r\\n      cursor: pointer;\\r\\n    }\\r\\n\\r\\n    ::slotted(div:hover) {\\r\\n      background-color: var(--app-hover-color, #f9f9f9);\\r\\n    }\\r\\n\\r\\n    ::slotted(div:focus) {\\r\\n      outline: none;\\r\\n      background-color: var(--app-hover-color, #f9f9f9);\\r\\n    }\\r\\n\\r\\n    ::slotted(hr) {\\r\\n      border: 0;\\r\\n      border-top: 1px solid var(--app-border-color, #dadce0);\\r\\n      margin: 8px 0;\\r\\n      height: 1px;\\r\\n    }\\r\\n\\r\\n    div {\\r\\n      display: inline-block;\\r\\n      position: relative;\\r\\n    }\\r\\n\\r\\n    titanium-menu-surface {\\r\\n      padding: 8px 0;\\r\\n    }\\r\\n  `\""
        }
      ],
      "cssProperties": [
        {
          "name": "--app-hover-color",
          "description": "Item hover color",
          "type": "Color"
        },
        {
          "name": "--app-text-color",
          "description": "Item text color",
          "type": "Color"
        },
        {
          "name": "--app-border-color",
          "description": "Item divider (hr) color",
          "type": "Color"
        }
      ]
    },
    {
      "name": "titanium-svg-button",
      "path": "./..\\titanium-svg-button\\src\\titanium-svg-button.ts",
      "description": "Material design inspired SVG button.",
      "attributes": [
        {
          "name": "path",
          "description": "SVG path",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "disabled",
          "description": "Disables the button",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "path",
          "attribute": "path",
          "description": "SVG path",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "disabled",
          "attribute": "disabled",
          "description": "Disables the button",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "styles",
          "type": "CSSResult",
          "default": "\"css`\\r\\n    :host {\\r\\n      display: inline-block;\\r\\n      flex-shrink: 0;\\r\\n      width: var(--titanium-svg-button-size, 42px);\\r\\n      height: var(--titanium-svg-button-size, 42px);\\r\\n      cursor: pointer;\\r\\n      border-radius: 50%;\\r\\n      overflow: hidden;\\r\\n      --mdc-theme-primary: var(--app-primary-color, #3b95ff);\\r\\n    }\\r\\n\\r\\n    button {\\r\\n      /* Button Reset */\\r\\n      border: none;\\r\\n      outline: none;\\r\\n      margin: 0;\\r\\n      width: auto;\\r\\n      overflow: visible;\\r\\n      background: transparent;\\r\\n      /* inherit font and color from ancestor */\\r\\n      font: inherit;\\r\\n      /* Corrects font smoothing for webkit */\\r\\n      -webkit-font-smoothing: inherit;\\r\\n      -moz-osx-font-smoothing: inherit;\\r\\n      box-sizing: border-box;\\r\\n      display: block;\\r\\n      cursor: pointer;\\r\\n      width: var(--titanium-svg-button-size, 42px);\\r\\n      height: var(--titanium-svg-button-size, 42px);\\r\\n      border-radius: 50%;\\r\\n      padding: 0;\\r\\n      position: relative;\\r\\n      outline: none;\\r\\n    }\\r\\n\\r\\n    :host([disabled]) {\\r\\n      pointer-events: none;\\r\\n    }\\r\\n\\r\\n    button::-moz-focus-inner {\\r\\n      border: 0;\\r\\n    }\\r\\n\\r\\n    :host([hidden]) {\\r\\n      display: none;\\r\\n    }\\r\\n\\r\\n    svg {\\r\\n      display: block;\\r\\n      margin: 0 auto;\\r\\n      width: var(--titanium-svg-button-svg-size, 60%);\\r\\n      height: var(--titanium-svg-button-svg-size, 60%);\\r\\n      fill: var(--app-text-color, #5f6368);\\r\\n    }\\r\\n\\r\\n    mwc-ripple {\\r\\n      border-radius: 50%;\\r\\n      position: absolute;\\r\\n      width: 100%;\\r\\n      height: 100%;\\r\\n      top: 0;\\r\\n      right: 0;\\r\\n      overflow: hidden;\\r\\n    }\\r\\n\\r\\n    :host([disabled]) svg {\\r\\n      fill: rgba(0, 0, 0, 0.37);\\r\\n    }\\r\\n  `\""
        }
      ],
      "cssProperties": [
        {
          "name": "--titanium-svg-button-size",
          "description": "Size of the SVG button (default: 42px)",
          "type": "Length"
        },
        {
          "name": "--app-text-color",
          "description": "Icon fill color",
          "type": "Color"
        },
        {
          "name": "--app-primary-color",
          "description": "Ripple color",
          "type": "Color"
        },
        {
          "name": "--titanium-svg-button-svg-size",
          "description": "Size of the SVG in the button (default: 60%)",
          "type": "Length"
        }
      ]
    },
    {
      "name": "titanium-sw-notifier",
      "path": "./..\\titanium-sw-notifier\\src\\titanium-sw-notifier.ts",
      "attributes": [
        {
          "name": "notificationsStatus",
          "type": "string"
        },
        {
          "name": "scriptUrl",
          "type": "string",
          "default": "\"service-worker.js\""
        }
      ],
      "properties": [
        {
          "name": "notificationsStatus",
          "attribute": "notificationsStatus",
          "type": "string"
        },
        {
          "name": "scriptUrl",
          "attribute": "scriptUrl",
          "type": "string",
          "default": "\"service-worker.js\""
        }
      ]
    },
    {
      "name": "titanium-tab-control-item",
      "path": "./..\\titanium-tab-control\\src\\titanium-tab-control-item.ts",
      "attributes": [
        {
          "name": "href",
          "type": "string"
        },
        {
          "name": "disabled",
          "type": "boolean"
        },
        {
          "name": "selected",
          "type": "boolean"
        },
        {
          "name": "target",
          "description": "The URL target",
          "type": "\"_blank\" | \"_parent\" | \"_self\" | \"_top\""
        }
      ],
      "properties": [
        {
          "name": "href",
          "attribute": "href",
          "type": "string"
        },
        {
          "name": "disabled",
          "attribute": "disabled",
          "type": "boolean"
        },
        {
          "name": "selected",
          "attribute": "selected",
          "type": "boolean"
        },
        {
          "name": "target",
          "attribute": "target",
          "description": "The URL target",
          "type": "\"_blank\" | \"_parent\" | \"_self\" | \"_top\""
        },
        {
          "name": "styles",
          "type": "CSSResult",
          "default": "\"css`\\r\\n    :host {\\r\\n      display: block;\\r\\n    }\\r\\n\\r\\n    a {\\r\\n      display: flex;\\r\\n      flex-direction: row;\\r\\n      align-items: center;\\r\\n      font-family: Metropolis, 'Roboto', 'Noto', sans-serif;\\r\\n      -webkit-font-smoothing: antialiased;\\r\\n      line-height: 24px;\\r\\n      letter-spacing: 0.35px;\\r\\n      font-size: 13px;\\r\\n      font-weight: 500;\\r\\n      text-decoration: none;\\r\\n      color: var(--app-menu-text-color, #3c4043);\\r\\n      fill: var(--app-menu-text-color, #3c4043);\\r\\n      transition: background 75ms;\\r\\n      white-space: nowrap;\\r\\n      padding: 0 24px;\\r\\n    }\\r\\n\\r\\n    @media (max-width: 468px) {\\r\\n      a {\\r\\n        padding: 0 16px;\\r\\n      }\\r\\n    }\\r\\n\\r\\n    a:hover,\\r\\n    :host([selected]) a {\\r\\n      color: var(--app-link-color, #3b95ff);\\r\\n    }\\r\\n\\r\\n    selection-marker {\\r\\n      padding: 12px 0;\\r\\n    }\\r\\n\\r\\n    :host([selected]) selection-marker {\\r\\n      border-bottom: 3px solid var(--app-link-color, #3b95ff);\\r\\n      padding-bottom: 9px;\\r\\n    }\\r\\n\\r\\n    :host([disabled]:not([selected])) a {\\r\\n      color: rgba(0, 0, 0, 0.37);\\r\\n      cursor: default;\\r\\n      pointer-events: none;\\r\\n    }\\r\\n  `\""
        }
      ],
      "events": [
        {
          "name": "selected"
        }
      ]
    },
    {
      "name": "titanium-tab-control",
      "path": "./..\\titanium-tab-control\\src\\titanium-tab-control.ts",
      "properties": [
        {
          "name": "container",
          "type": "HTMLElement"
        },
        {
          "name": "leftNav",
          "type": "HTMLElement"
        },
        {
          "name": "rightNav",
          "type": "HTMLElement"
        },
        {
          "name": "styles",
          "type": "CSSResult",
          "default": "\"css`\\r\\n    :host {\\r\\n      display: block;\\r\\n      position: relative;\\r\\n      width: 100%;\\r\\n    }\\r\\n\\r\\n    menu-container {\\r\\n      display: flex;\\r\\n      flex-direction: row;\\r\\n      border-bottom: 1px solid var(--app-border-color, #dadce0);\\r\\n      overflow-x: scroll;\\r\\n      overflow-x: -moz-scrollbars-none;\\r\\n      scrollbar-width: none;\\r\\n      -ms-overflow-style: none;\\r\\n    }\\r\\n\\r\\n    menu-container::-webkit-scrollbar {\\r\\n      display: none;\\r\\n    }\\r\\n\\r\\n    left-nav,\\r\\n    right-nav {\\r\\n      display: flex;\\r\\n      align-items: center;\\r\\n      position: absolute;\\r\\n      top: 0;\\r\\n      bottom: 0;\\r\\n      width: 48px;\\r\\n      padding: 8px 8px 7px 8px;\\r\\n      margin-bottom: 1px;\\r\\n      fill: var(--app-text-color, #5f6368);\\r\\n      cursor: pointer;\\r\\n    }\\r\\n\\r\\n    left-nav:hover,\\r\\n    right-nav:hover {\\r\\n      fill: var(--app-link-color, #3b95ff);\\r\\n    }\\r\\n\\r\\n    right-nav {\\r\\n      right: 0;\\r\\n      justify-content: flex-end;\\r\\n      background: -moz-linear-gradient(left, rgba(255, 255, 255, 0) 0%, rgba(255, 255, 255, 1) 50%, rgba(255, 255, 255, 1) 100%);\\r\\n      background: -webkit-linear-gradient(left, rgba(255, 255, 255, 0) 0%, rgba(255, 255, 255, 1) 50%, rgba(255, 255, 255, 1) 100%);\\r\\n      background: linear-gradient(to right, rgba(255, 255, 255, 0) 0%, rgba(255, 255, 255, 1) 50%, rgba(255, 255, 255, 1) 100%);\\r\\n    }\\r\\n\\r\\n    left-nav {\\r\\n      left: 0;\\r\\n      justify-content: flex-start;\\r\\n      background: -moz-linear-gradient(left, rgba(255, 255, 255, 1) 0%, rgba(255, 255, 255, 1) 50%, rgba(255, 255, 255, 0) 100%);\\r\\n      background: -webkit-linear-gradient(left, rgba(255, 255, 255, 1) 0%, rgba(255, 255, 255, 1) 50%, rgba(255, 255, 255, 0) 100%);\\r\\n      background: linear-gradient(to right, rgba(255, 255, 255, 1) 0%, rgba(255, 255, 255, 1) 50%, rgba(255, 255, 255, 0) 100%);\\r\\n    }\\r\\n\\r\\n    svg {\\r\\n      width: 24px;\\r\\n      height: 24px;\\r\\n    }\\r\\n  `\""
        }
      ]
    },
    {
      "name": "titanium-toolbar",
      "path": "./..\\titanium-toolbar\\src\\titanium-toolbar.ts",
      "description": "A material design inspired site toolbar",
      "properties": [
        {
          "name": "styles",
          "type": "CSSResult",
          "default": "\"css`\\r\\n    :host {\\r\\n      display: flex;\\r\\n\\r\\n      position: fixed;\\r\\n      z-index: 2;\\r\\n      top: 0;\\r\\n      left: 0;\\r\\n      right: 0;\\r\\n\\r\\n      font-family: Roboto, sans-serif;\\r\\n      -moz-osx-font-smoothing: grayscale;\\r\\n      -webkit-font-smoothing: antialiased;\\r\\n\\r\\n      flex-direction: row;\\r\\n      align-items: center;\\r\\n      height: 48px;\\r\\n      padding: 0 14px;\\r\\n      background-color: var(--titanium-toolbar-color, #fff);\\r\\n    }\\r\\n\\r\\n    :host([shadow]) {\\r\\n      box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\\r\\n      transition: box-shadow 0.3s ease-in-out;\\r\\n    }\\r\\n\\r\\n    ::slotted([main-title]) {\\r\\n      font-size: 22px;\\r\\n      letter-spacing: 0.9px;\\r\\n      color: var(--app-text-color);\\r\\n    }\\r\\n\\r\\n    [hidden] {\\r\\n      display: none !important;\\r\\n    }\\r\\n  `\""
        }
      ],
      "slots": [
        {
          "name": "",
          "description": "toolbar content (use main-title attribute on slotted title item)"
        }
      ],
      "cssProperties": [
        {
          "name": "--titanium-toolbar-color",
          "description": "Color of the toolbar background",
          "type": "Color"
        },
        {
          "name": "-app-text-color",
          "description": "main title text color",
          "type": "Color"
        }
      ]
    },
    {
      "name": "titanium-twoline-formfield",
      "path": "./..\\titanium-twoline-formfield\\src\\titanium-twoline-formfield.ts",
      "description": "Titanium Two Line Formfield.",
      "attributes": [
        {
          "name": "description",
          "description": "Description of the form field.\r\nThis will be placed below the label.",
          "type": "string"
        }
      ],
      "properties": [
        {
          "name": "description",
          "attribute": "description",
          "description": "Description of the form field.\r\nThis will be placed below the label.",
          "type": "string"
        },
        {
          "name": "styles",
          "type": "CSSResult[]",
          "default": "[null,null]"
        },
        {
          "name": "alignEnd",
          "type": "boolean"
        },
        {
          "name": "spaceBetween",
          "type": "boolean"
        },
        {
          "name": "nowrap",
          "type": "boolean"
        },
        {
          "name": "label",
          "type": "string"
        }
      ],
      "slots": [
        {
          "name": "mwc-checkbox",
          "description": "Checkbox slot that will be placed to the left of the label and description"
        }
      ]
    },
    {
      "name": "titanium-youtube-input",
      "path": "./..\\titanium-youtube-input\\src\\titanium-youtube-input.ts",
      "description": "Material design YouTube url input.",
      "attributes": [
        {
          "name": "youtube-video-key",
          "description": "Unique YouTube video key",
          "type": "string | null | undefined"
        },
        {
          "name": "required",
          "description": "Displays error state if value is empty and input is blurred.",
          "type": "boolean"
        },
        {
          "name": "disabled",
          "description": "Disables the input",
          "type": "boolean"
        },
        {
          "name": "validationMessage",
          "description": "Message to show in the error color when the textfield is invalid. (Helper text will not be visible)",
          "type": "string"
        },
        {
          "name": "label",
          "description": "Sets floating label value.",
          "type": "string",
          "default": "\"YouTube Video Key\""
        }
      ],
      "properties": [
        {
          "name": "youTubeVideoKey",
          "attribute": "youtube-video-key",
          "description": "Unique YouTube video key",
          "type": "string | null | undefined"
        },
        {
          "name": "required",
          "attribute": "required",
          "description": "Displays error state if value is empty and input is blurred.",
          "type": "boolean"
        },
        {
          "name": "disabled",
          "attribute": "disabled",
          "description": "Disables the input",
          "type": "boolean"
        },
        {
          "name": "validationMessage",
          "attribute": "validationMessage",
          "description": "Message to show in the error color when the textfield is invalid. (Helper text will not be visible)",
          "type": "string"
        },
        {
          "name": "label",
          "attribute": "label",
          "description": "Sets floating label value.",
          "type": "string",
          "default": "\"YouTube Video Key\""
        },
        {
          "name": "styles",
          "type": "CSSResult",
          "default": "\"css`\\r\\n    :host {\\r\\n      display: block;\\r\\n      position: relative;\\r\\n    }\\r\\n\\r\\n    img {\\r\\n      position: absolute;\\r\\n      top: 7px;\\r\\n      right: 7px;\\r\\n      max-height: 42px;\\r\\n    }\\r\\n\\r\\n    mwc-textfield {\\r\\n      display: flex;\\r\\n    }\\r\\n  `\""
        }
      ],
      "events": [
        {
          "name": "video-changed",
          "description": "Fired when the YouTube video key changes"
        }
      ]
    },
    {
      "name": "user-manager",
      "path": "./..\\user-manager\\src\\user-manager.ts",
      "attributes": [
        {
          "name": "roles",
          "type": "string[]",
          "default": "[]"
        },
        {
          "name": "fullname",
          "type": "string"
        },
        {
          "name": "username",
          "type": "string"
        },
        {
          "name": "firstName",
          "type": "string"
        },
        {
          "name": "lastName",
          "type": "string"
        },
        {
          "name": "company",
          "type": "string"
        },
        {
          "name": "companyId",
          "type": "number | null"
        },
        {
          "name": "email",
          "type": "string"
        },
        {
          "name": "personId",
          "type": "number",
          "default": "0"
        },
        {
          "name": "refreshTokenId",
          "type": "number",
          "default": "0"
        },
        {
          "name": "redirectUrl",
          "type": "string",
          "default": "\"https://signin.leavitt.com/\""
        },
        {
          "name": "redirectDevUrl",
          "type": "string",
          "default": "\"https://devsignin.leavitt.com/\""
        },
        {
          "name": "tokenUri",
          "type": "string",
          "default": "\"isDevelopment ? 'https://devoauth2.leavitt.com/token' : 'https://oauth2.leavitt.com/token'\""
        },
        {
          "name": "issuerIdentifier",
          "type": "string",
          "default": "\"https://oauth2.leavitt.com/\""
        },
        {
          "name": "disableAutoload",
          "type": "boolean"
        },
        {
          "name": "isActiveEmployee",
          "type": "boolean"
        }
      ],
      "properties": [
        {
          "name": "roles",
          "attribute": "roles",
          "type": "string[]",
          "default": "[]"
        },
        {
          "name": "fullname",
          "attribute": "fullname",
          "type": "string"
        },
        {
          "name": "username",
          "attribute": "username",
          "type": "string"
        },
        {
          "name": "firstName",
          "attribute": "firstName",
          "type": "string"
        },
        {
          "name": "lastName",
          "attribute": "lastName",
          "type": "string"
        },
        {
          "name": "company",
          "attribute": "company",
          "type": "string"
        },
        {
          "name": "companyId",
          "attribute": "companyId",
          "type": "number | null"
        },
        {
          "name": "email",
          "attribute": "email",
          "type": "string"
        },
        {
          "name": "personId",
          "attribute": "personId",
          "type": "number",
          "default": "0"
        },
        {
          "name": "refreshTokenId",
          "attribute": "refreshTokenId",
          "type": "number",
          "default": "0"
        },
        {
          "name": "redirectUrl",
          "attribute": "redirectUrl",
          "type": "string",
          "default": "\"https://signin.leavitt.com/\""
        },
        {
          "name": "redirectDevUrl",
          "attribute": "redirectDevUrl",
          "type": "string",
          "default": "\"https://devsignin.leavitt.com/\""
        },
        {
          "name": "tokenUri",
          "attribute": "tokenUri",
          "type": "string",
          "default": "\"isDevelopment ? 'https://devoauth2.leavitt.com/token' : 'https://oauth2.leavitt.com/token'\""
        },
        {
          "name": "issuerIdentifier",
          "attribute": "issuerIdentifier",
          "type": "string",
          "default": "\"https://oauth2.leavitt.com/\""
        },
        {
          "name": "disableAutoload",
          "attribute": "disableAutoload",
          "type": "boolean"
        },
        {
          "name": "isActiveEmployee",
          "attribute": "isActiveEmployee",
          "type": "boolean"
        }
      ],
      "events": [
        {
          "name": "token"
        },
        {
          "name": "um-role-removed"
        }
      ]
    }
  ]
}